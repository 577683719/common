// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: coupons.proto

package coupons

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	CouponsService_AddPromotionCoupons_FullMethodName   = "/CouponsService/AddPromotionCoupons"
	CouponsService_AddCoupons_FullMethodName            = "/CouponsService/AddCoupons"
	CouponsService_EditCoupons_FullMethodName           = "/CouponsService/EditCoupons"
	CouponsService_DeleteCoupons_FullMethodName         = "/CouponsService/DeleteCoupons"
	CouponsService_HomePage_FullMethodName              = "/CouponsService/HomePage"
	CouponsService_PickUpVouchers_FullMethodName        = "/CouponsService/PickUpVouchers"
	CouponsService_GetAVoucherByCategory_FullMethodName = "/CouponsService/GetAVoucherByCategory"
	CouponsService_AddVouchers_FullMethodName           = "/CouponsService/AddVouchers"
	CouponsService_EditVouchers_FullMethodName          = "/CouponsService/EditVouchers"
	CouponsService_DeleteVouchers_FullMethodName        = "/CouponsService/DeleteVouchers"
	CouponsService_GetVouchersList_FullMethodName       = "/CouponsService/GetVouchersList"
	CouponsService_VouchersAreIssued_FullMethodName     = "/CouponsService/VouchersAreIssued"
)

// CouponsServiceClient is the client API for CouponsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CouponsServiceClient interface {
	//领取优惠券
	AddPromotionCoupons(ctx context.Context, in *AddPromotionCouponsRequest, opts ...grpc.CallOption) (*AddPromotionCouponsResponse, error)
	//添加优惠券
	AddCoupons(ctx context.Context, in *CouponsRequest, opts ...grpc.CallOption) (*AddCouponsResponse, error)
	//修改优惠卷
	EditCoupons(ctx context.Context, in *CouponsRequest, opts ...grpc.CallOption) (*EditCouponsResponse, error)
	//删除优惠卷
	DeleteCoupons(ctx context.Context, in *CouponsRequest, opts ...grpc.CallOption) (*DeleteCouponsResponse, error)
	//首页
	HomePage(ctx context.Context, in *HomePageRequest, opts ...grpc.CallOption) (*HomePageResponse, error)
	//领取代金券
	PickUpVouchers(ctx context.Context, in *PickUpVouchersRequest, opts ...grpc.CallOption) (*PickUpVouchersResponse, error)
	//rpc接口-根据类型获取代金券
	GetAVoucherByCategory(ctx context.Context, in *GetAVoucherByCategoryRequest, opts ...grpc.CallOption) (*GetAVoucherByCategoryResponse, error)
	//管理端-添加代金券
	AddVouchers(ctx context.Context, in *VouchersRequest, opts ...grpc.CallOption) (*DefaultResponse, error)
	//管理端-修改代金券
	EditVouchers(ctx context.Context, in *VouchersRequest, opts ...grpc.CallOption) (*DefaultResponse, error)
	//管理端-删除代金券
	DeleteVouchers(ctx context.Context, in *VouchersRequest, opts ...grpc.CallOption) (*DefaultResponse, error)
	//管理端-获取代金券列表
	GetVouchersList(ctx context.Context, in *GetVouchersListRequest, opts ...grpc.CallOption) (*GetVouchersListResponse, error)
	//管理端-发放代金券
	VouchersAreIssued(ctx context.Context, in *VouchersAreIssuedReqeust, opts ...grpc.CallOption) (*DefaultResponse, error)
}

type couponsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCouponsServiceClient(cc grpc.ClientConnInterface) CouponsServiceClient {
	return &couponsServiceClient{cc}
}

func (c *couponsServiceClient) AddPromotionCoupons(ctx context.Context, in *AddPromotionCouponsRequest, opts ...grpc.CallOption) (*AddPromotionCouponsResponse, error) {
	out := new(AddPromotionCouponsResponse)
	err := c.cc.Invoke(ctx, CouponsService_AddPromotionCoupons_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponsServiceClient) AddCoupons(ctx context.Context, in *CouponsRequest, opts ...grpc.CallOption) (*AddCouponsResponse, error) {
	out := new(AddCouponsResponse)
	err := c.cc.Invoke(ctx, CouponsService_AddCoupons_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponsServiceClient) EditCoupons(ctx context.Context, in *CouponsRequest, opts ...grpc.CallOption) (*EditCouponsResponse, error) {
	out := new(EditCouponsResponse)
	err := c.cc.Invoke(ctx, CouponsService_EditCoupons_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponsServiceClient) DeleteCoupons(ctx context.Context, in *CouponsRequest, opts ...grpc.CallOption) (*DeleteCouponsResponse, error) {
	out := new(DeleteCouponsResponse)
	err := c.cc.Invoke(ctx, CouponsService_DeleteCoupons_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponsServiceClient) HomePage(ctx context.Context, in *HomePageRequest, opts ...grpc.CallOption) (*HomePageResponse, error) {
	out := new(HomePageResponse)
	err := c.cc.Invoke(ctx, CouponsService_HomePage_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponsServiceClient) PickUpVouchers(ctx context.Context, in *PickUpVouchersRequest, opts ...grpc.CallOption) (*PickUpVouchersResponse, error) {
	out := new(PickUpVouchersResponse)
	err := c.cc.Invoke(ctx, CouponsService_PickUpVouchers_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponsServiceClient) GetAVoucherByCategory(ctx context.Context, in *GetAVoucherByCategoryRequest, opts ...grpc.CallOption) (*GetAVoucherByCategoryResponse, error) {
	out := new(GetAVoucherByCategoryResponse)
	err := c.cc.Invoke(ctx, CouponsService_GetAVoucherByCategory_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponsServiceClient) AddVouchers(ctx context.Context, in *VouchersRequest, opts ...grpc.CallOption) (*DefaultResponse, error) {
	out := new(DefaultResponse)
	err := c.cc.Invoke(ctx, CouponsService_AddVouchers_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponsServiceClient) EditVouchers(ctx context.Context, in *VouchersRequest, opts ...grpc.CallOption) (*DefaultResponse, error) {
	out := new(DefaultResponse)
	err := c.cc.Invoke(ctx, CouponsService_EditVouchers_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponsServiceClient) DeleteVouchers(ctx context.Context, in *VouchersRequest, opts ...grpc.CallOption) (*DefaultResponse, error) {
	out := new(DefaultResponse)
	err := c.cc.Invoke(ctx, CouponsService_DeleteVouchers_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponsServiceClient) GetVouchersList(ctx context.Context, in *GetVouchersListRequest, opts ...grpc.CallOption) (*GetVouchersListResponse, error) {
	out := new(GetVouchersListResponse)
	err := c.cc.Invoke(ctx, CouponsService_GetVouchersList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *couponsServiceClient) VouchersAreIssued(ctx context.Context, in *VouchersAreIssuedReqeust, opts ...grpc.CallOption) (*DefaultResponse, error) {
	out := new(DefaultResponse)
	err := c.cc.Invoke(ctx, CouponsService_VouchersAreIssued_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CouponsServiceServer is the server API for CouponsService service.
// All implementations should embed UnimplementedCouponsServiceServer
// for forward compatibility
type CouponsServiceServer interface {
	//领取优惠券
	AddPromotionCoupons(context.Context, *AddPromotionCouponsRequest) (*AddPromotionCouponsResponse, error)
	//添加优惠券
	AddCoupons(context.Context, *CouponsRequest) (*AddCouponsResponse, error)
	//修改优惠卷
	EditCoupons(context.Context, *CouponsRequest) (*EditCouponsResponse, error)
	//删除优惠卷
	DeleteCoupons(context.Context, *CouponsRequest) (*DeleteCouponsResponse, error)
	//首页
	HomePage(context.Context, *HomePageRequest) (*HomePageResponse, error)
	//领取代金券
	PickUpVouchers(context.Context, *PickUpVouchersRequest) (*PickUpVouchersResponse, error)
	//rpc接口-根据类型获取代金券
	GetAVoucherByCategory(context.Context, *GetAVoucherByCategoryRequest) (*GetAVoucherByCategoryResponse, error)
	//管理端-添加代金券
	AddVouchers(context.Context, *VouchersRequest) (*DefaultResponse, error)
	//管理端-修改代金券
	EditVouchers(context.Context, *VouchersRequest) (*DefaultResponse, error)
	//管理端-删除代金券
	DeleteVouchers(context.Context, *VouchersRequest) (*DefaultResponse, error)
	//管理端-获取代金券列表
	GetVouchersList(context.Context, *GetVouchersListRequest) (*GetVouchersListResponse, error)
	//管理端-发放代金券
	VouchersAreIssued(context.Context, *VouchersAreIssuedReqeust) (*DefaultResponse, error)
}

// UnimplementedCouponsServiceServer should be embedded to have forward compatible implementations.
type UnimplementedCouponsServiceServer struct {
}

func (UnimplementedCouponsServiceServer) AddPromotionCoupons(context.Context, *AddPromotionCouponsRequest) (*AddPromotionCouponsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddPromotionCoupons not implemented")
}
func (UnimplementedCouponsServiceServer) AddCoupons(context.Context, *CouponsRequest) (*AddCouponsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddCoupons not implemented")
}
func (UnimplementedCouponsServiceServer) EditCoupons(context.Context, *CouponsRequest) (*EditCouponsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditCoupons not implemented")
}
func (UnimplementedCouponsServiceServer) DeleteCoupons(context.Context, *CouponsRequest) (*DeleteCouponsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteCoupons not implemented")
}
func (UnimplementedCouponsServiceServer) HomePage(context.Context, *HomePageRequest) (*HomePageResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method HomePage not implemented")
}
func (UnimplementedCouponsServiceServer) PickUpVouchers(context.Context, *PickUpVouchersRequest) (*PickUpVouchersResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PickUpVouchers not implemented")
}
func (UnimplementedCouponsServiceServer) GetAVoucherByCategory(context.Context, *GetAVoucherByCategoryRequest) (*GetAVoucherByCategoryResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetAVoucherByCategory not implemented")
}
func (UnimplementedCouponsServiceServer) AddVouchers(context.Context, *VouchersRequest) (*DefaultResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method AddVouchers not implemented")
}
func (UnimplementedCouponsServiceServer) EditVouchers(context.Context, *VouchersRequest) (*DefaultResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EditVouchers not implemented")
}
func (UnimplementedCouponsServiceServer) DeleteVouchers(context.Context, *VouchersRequest) (*DefaultResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteVouchers not implemented")
}
func (UnimplementedCouponsServiceServer) GetVouchersList(context.Context, *GetVouchersListRequest) (*GetVouchersListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetVouchersList not implemented")
}
func (UnimplementedCouponsServiceServer) VouchersAreIssued(context.Context, *VouchersAreIssuedReqeust) (*DefaultResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VouchersAreIssued not implemented")
}

// UnsafeCouponsServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CouponsServiceServer will
// result in compilation errors.
type UnsafeCouponsServiceServer interface {
	mustEmbedUnimplementedCouponsServiceServer()
}

func RegisterCouponsServiceServer(s grpc.ServiceRegistrar, srv CouponsServiceServer) {
	s.RegisterService(&CouponsService_ServiceDesc, srv)
}

func _CouponsService_AddPromotionCoupons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AddPromotionCouponsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponsServiceServer).AddPromotionCoupons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponsService_AddPromotionCoupons_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponsServiceServer).AddPromotionCoupons(ctx, req.(*AddPromotionCouponsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponsService_AddCoupons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CouponsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponsServiceServer).AddCoupons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponsService_AddCoupons_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponsServiceServer).AddCoupons(ctx, req.(*CouponsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponsService_EditCoupons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CouponsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponsServiceServer).EditCoupons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponsService_EditCoupons_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponsServiceServer).EditCoupons(ctx, req.(*CouponsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponsService_DeleteCoupons_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CouponsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponsServiceServer).DeleteCoupons(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponsService_DeleteCoupons_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponsServiceServer).DeleteCoupons(ctx, req.(*CouponsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponsService_HomePage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(HomePageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponsServiceServer).HomePage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponsService_HomePage_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponsServiceServer).HomePage(ctx, req.(*HomePageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponsService_PickUpVouchers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PickUpVouchersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponsServiceServer).PickUpVouchers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponsService_PickUpVouchers_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponsServiceServer).PickUpVouchers(ctx, req.(*PickUpVouchersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponsService_GetAVoucherByCategory_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetAVoucherByCategoryRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponsServiceServer).GetAVoucherByCategory(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponsService_GetAVoucherByCategory_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponsServiceServer).GetAVoucherByCategory(ctx, req.(*GetAVoucherByCategoryRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponsService_AddVouchers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VouchersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponsServiceServer).AddVouchers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponsService_AddVouchers_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponsServiceServer).AddVouchers(ctx, req.(*VouchersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponsService_EditVouchers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VouchersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponsServiceServer).EditVouchers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponsService_EditVouchers_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponsServiceServer).EditVouchers(ctx, req.(*VouchersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponsService_DeleteVouchers_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VouchersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponsServiceServer).DeleteVouchers(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponsService_DeleteVouchers_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponsServiceServer).DeleteVouchers(ctx, req.(*VouchersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponsService_GetVouchersList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetVouchersListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponsServiceServer).GetVouchersList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponsService_GetVouchersList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponsServiceServer).GetVouchersList(ctx, req.(*GetVouchersListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CouponsService_VouchersAreIssued_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VouchersAreIssuedReqeust)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CouponsServiceServer).VouchersAreIssued(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: CouponsService_VouchersAreIssued_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CouponsServiceServer).VouchersAreIssued(ctx, req.(*VouchersAreIssuedReqeust))
	}
	return interceptor(ctx, in, info, handler)
}

// CouponsService_ServiceDesc is the grpc.ServiceDesc for CouponsService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CouponsService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "CouponsService",
	HandlerType: (*CouponsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "AddPromotionCoupons",
			Handler:    _CouponsService_AddPromotionCoupons_Handler,
		},
		{
			MethodName: "AddCoupons",
			Handler:    _CouponsService_AddCoupons_Handler,
		},
		{
			MethodName: "EditCoupons",
			Handler:    _CouponsService_EditCoupons_Handler,
		},
		{
			MethodName: "DeleteCoupons",
			Handler:    _CouponsService_DeleteCoupons_Handler,
		},
		{
			MethodName: "HomePage",
			Handler:    _CouponsService_HomePage_Handler,
		},
		{
			MethodName: "PickUpVouchers",
			Handler:    _CouponsService_PickUpVouchers_Handler,
		},
		{
			MethodName: "GetAVoucherByCategory",
			Handler:    _CouponsService_GetAVoucherByCategory_Handler,
		},
		{
			MethodName: "AddVouchers",
			Handler:    _CouponsService_AddVouchers_Handler,
		},
		{
			MethodName: "EditVouchers",
			Handler:    _CouponsService_EditVouchers_Handler,
		},
		{
			MethodName: "DeleteVouchers",
			Handler:    _CouponsService_DeleteVouchers_Handler,
		},
		{
			MethodName: "GetVouchersList",
			Handler:    _CouponsService_GetVouchersList_Handler,
		},
		{
			MethodName: "VouchersAreIssued",
			Handler:    _CouponsService_VouchersAreIssued_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "coupons.proto",
}
