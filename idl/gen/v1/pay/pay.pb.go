// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        (unknown)
// source: pay.proto

package pay

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetQRCodeTransactionStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RetryUuid string `protobuf:"bytes,1,opt,name=retryUuid,proto3" json:"retryUuid,omitempty"`
	PayType   string `protobuf:"bytes,2,opt,name=payType,proto3" json:"payType,omitempty"`
}

func (x *GetQRCodeTransactionStatus) Reset() {
	*x = GetQRCodeTransactionStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetQRCodeTransactionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetQRCodeTransactionStatus) ProtoMessage() {}

func (x *GetQRCodeTransactionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetQRCodeTransactionStatus.ProtoReflect.Descriptor instead.
func (*GetQRCodeTransactionStatus) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{0}
}

func (x *GetQRCodeTransactionStatus) GetRetryUuid() string {
	if x != nil {
		return x.RetryUuid
	}
	return ""
}

func (x *GetQRCodeTransactionStatus) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

// 支付宝提现
type AlipayWithdrawalRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//系统用户id
	AdminUserId int64 `protobuf:"varint,1,opt,name=adminUserId,proto3" json:"adminUserId,omitempty"`
	//提现金额
	WithdrawalAmount string `protobuf:"bytes,2,opt,name=withdrawalAmount,proto3" json:"withdrawalAmount,omitempty"`
	//用户id
	UserId int64 `protobuf:"varint,3,opt,name=userId,proto3" json:"userId,omitempty"`
	//申请单id
	AlipayCashOutApplicationId int64 `protobuf:"varint,4,opt,name=alipayCashOutApplicationId,proto3" json:"alipayCashOutApplicationId,omitempty"`
}

func (x *AlipayWithdrawalRequest) Reset() {
	*x = AlipayWithdrawalRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlipayWithdrawalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlipayWithdrawalRequest) ProtoMessage() {}

func (x *AlipayWithdrawalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlipayWithdrawalRequest.ProtoReflect.Descriptor instead.
func (*AlipayWithdrawalRequest) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{1}
}

func (x *AlipayWithdrawalRequest) GetAdminUserId() int64 {
	if x != nil {
		return x.AdminUserId
	}
	return 0
}

func (x *AlipayWithdrawalRequest) GetWithdrawalAmount() string {
	if x != nil {
		return x.WithdrawalAmount
	}
	return ""
}

func (x *AlipayWithdrawalRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AlipayWithdrawalRequest) GetAlipayCashOutApplicationId() int64 {
	if x != nil {
		return x.AlipayCashOutApplicationId
	}
	return 0
}

// 用户实名认证
type UserRealNameAuthenticationReqeust struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//真实姓名
	CertName string `protobuf:"bytes,1,opt,name=certName,proto3" json:"certName,omitempty"`
	//身份证号
	CertNo string `protobuf:"bytes,2,opt,name=certNo,proto3" json:"certNo,omitempty"`
}

func (x *UserRealNameAuthenticationReqeust) Reset() {
	*x = UserRealNameAuthenticationReqeust{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserRealNameAuthenticationReqeust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserRealNameAuthenticationReqeust) ProtoMessage() {}

func (x *UserRealNameAuthenticationReqeust) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserRealNameAuthenticationReqeust.ProtoReflect.Descriptor instead.
func (*UserRealNameAuthenticationReqeust) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{2}
}

func (x *UserRealNameAuthenticationReqeust) GetCertName() string {
	if x != nil {
		return x.CertName
	}
	return ""
}

func (x *UserRealNameAuthenticationReqeust) GetCertNo() string {
	if x != nil {
		return x.CertNo
	}
	return ""
}

// 查询支付宝提现申请请求对象
type QueryAlipayCashOutApplicationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//页号
	PageNum int64 `protobuf:"varint,1,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	//页大小
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	//主键
	Id int64 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	//提现金额
	CashOutAmount string `protobuf:"bytes,4,opt,name=cashOutAmount,proto3" json:"cashOutAmount,omitempty"`
	//申请时间从
	TradingHoursFrom string `protobuf:"bytes,5,opt,name=tradingHoursFrom,proto3" json:"tradingHoursFrom,omitempty"`
	//审批时间
	ApprovalTime string `protobuf:"bytes,6,opt,name=approvalTime,proto3" json:"approvalTime,omitempty"`
	//审批状态 PENDING:待审批 APPROVED:已批准 REJECTED:已拒绝 IN_REVIEW:审核中 COMPLETED:已完成 UNDER_REVIEW:正在审查 CANCELLED:已取消
	ApprovalStatus string `protobuf:"bytes,7,opt,name=approvalStatus,proto3" json:"approvalStatus,omitempty"`
	//转账状态  未转账:PENDING    已转账:SUCCESS  转账失败:FAIL
	TransferStatus string `protobuf:"bytes,8,opt,name=transferStatus,proto3" json:"transferStatus,omitempty"`
	//账户
	Account string `protobuf:"bytes,9,opt,name=account,proto3" json:"account,omitempty"`
	//真实姓名
	RealName string `protobuf:"bytes,10,opt,name=realName,proto3" json:"realName,omitempty"`
	//用户id
	UserID int64 `protobuf:"varint,11,opt,name=userID,proto3" json:"userID,omitempty"`
	//申请时间到
	TradingHoursTo string `protobuf:"bytes,12,opt,name=tradingHoursTo,proto3" json:"tradingHoursTo,omitempty"`
}

func (x *QueryAlipayCashOutApplicationRequest) Reset() {
	*x = QueryAlipayCashOutApplicationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAlipayCashOutApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAlipayCashOutApplicationRequest) ProtoMessage() {}

func (x *QueryAlipayCashOutApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAlipayCashOutApplicationRequest.ProtoReflect.Descriptor instead.
func (*QueryAlipayCashOutApplicationRequest) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{3}
}

func (x *QueryAlipayCashOutApplicationRequest) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryAlipayCashOutApplicationRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryAlipayCashOutApplicationRequest) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *QueryAlipayCashOutApplicationRequest) GetCashOutAmount() string {
	if x != nil {
		return x.CashOutAmount
	}
	return ""
}

func (x *QueryAlipayCashOutApplicationRequest) GetTradingHoursFrom() string {
	if x != nil {
		return x.TradingHoursFrom
	}
	return ""
}

func (x *QueryAlipayCashOutApplicationRequest) GetApprovalTime() string {
	if x != nil {
		return x.ApprovalTime
	}
	return ""
}

func (x *QueryAlipayCashOutApplicationRequest) GetApprovalStatus() string {
	if x != nil {
		return x.ApprovalStatus
	}
	return ""
}

func (x *QueryAlipayCashOutApplicationRequest) GetTransferStatus() string {
	if x != nil {
		return x.TransferStatus
	}
	return ""
}

func (x *QueryAlipayCashOutApplicationRequest) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *QueryAlipayCashOutApplicationRequest) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *QueryAlipayCashOutApplicationRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *QueryAlipayCashOutApplicationRequest) GetTradingHoursTo() string {
	if x != nil {
		return x.TradingHoursTo
	}
	return ""
}

// 查询支付宝提现申请响应对象
type QueryAlipayCashOutApplicationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 总的记录数
	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// 每页显示的大小
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// 当前页
	Current int64 `protobuf:"varint,3,opt,name=current,proto3" json:"current,omitempty"`
	// 当前页内容
	Rows []*AlipayCashOutApplication `protobuf:"bytes,4,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *QueryAlipayCashOutApplicationResponse) Reset() {
	*x = QueryAlipayCashOutApplicationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAlipayCashOutApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAlipayCashOutApplicationResponse) ProtoMessage() {}

func (x *QueryAlipayCashOutApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAlipayCashOutApplicationResponse.ProtoReflect.Descriptor instead.
func (*QueryAlipayCashOutApplicationResponse) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{4}
}

func (x *QueryAlipayCashOutApplicationResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *QueryAlipayCashOutApplicationResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *QueryAlipayCashOutApplicationResponse) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *QueryAlipayCashOutApplicationResponse) GetRows() []*AlipayCashOutApplication {
	if x != nil {
		return x.Rows
	}
	return nil
}

type AlipayCashOutApplication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//主键
	Id int64 `protobuf:"varint,3,opt,name=id,proto3" json:"id,omitempty"`
	//提现金额
	CashOutAmount string `protobuf:"bytes,4,opt,name=cashOutAmount,proto3" json:"cashOutAmount,omitempty"`
	//申请时间
	ApplicationTime string `protobuf:"bytes,5,opt,name=applicationTime,proto3" json:"applicationTime,omitempty"`
	//审批时间
	ApprovalTime string `protobuf:"bytes,6,opt,name=approvalTime,proto3" json:"approvalTime,omitempty"`
	//审批状态 PENDING:待审批 APPROVED:已批准 REJECTED:已拒绝 IN_REVIEW:审核中 COMPLETED:已完成 UNDER_REVIEW:正在审查 CANCELLED:已取消
	ApprovalStatus string `protobuf:"bytes,7,opt,name=approvalStatus,proto3" json:"approvalStatus,omitempty"`
	//转账状态  未转账:PENDING    已转账:SUCCESS  转账失败:FAIL
	TransferStatus string `protobuf:"bytes,8,opt,name=transferStatus,proto3" json:"transferStatus,omitempty"`
	//账户
	Account string `protobuf:"bytes,9,opt,name=account,proto3" json:"account,omitempty"`
	//真实姓名
	RealName string `protobuf:"bytes,10,opt,name=realName,proto3" json:"realName,omitempty"`
	//用户id
	UserID int64 `protobuf:"varint,11,opt,name=userID,proto3" json:"userID,omitempty"`
	//创建时间
	CreateTime string `protobuf:"bytes,12,opt,name=createTime,proto3" json:"createTime,omitempty"`
	//修改时间
	UpdateTime string `protobuf:"bytes,13,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *AlipayCashOutApplication) Reset() {
	*x = AlipayCashOutApplication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlipayCashOutApplication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlipayCashOutApplication) ProtoMessage() {}

func (x *AlipayCashOutApplication) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlipayCashOutApplication.ProtoReflect.Descriptor instead.
func (*AlipayCashOutApplication) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{5}
}

func (x *AlipayCashOutApplication) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AlipayCashOutApplication) GetCashOutAmount() string {
	if x != nil {
		return x.CashOutAmount
	}
	return ""
}

func (x *AlipayCashOutApplication) GetApplicationTime() string {
	if x != nil {
		return x.ApplicationTime
	}
	return ""
}

func (x *AlipayCashOutApplication) GetApprovalTime() string {
	if x != nil {
		return x.ApprovalTime
	}
	return ""
}

func (x *AlipayCashOutApplication) GetApprovalStatus() string {
	if x != nil {
		return x.ApprovalStatus
	}
	return ""
}

func (x *AlipayCashOutApplication) GetTransferStatus() string {
	if x != nil {
		return x.TransferStatus
	}
	return ""
}

func (x *AlipayCashOutApplication) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *AlipayCashOutApplication) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *AlipayCashOutApplication) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *AlipayCashOutApplication) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *AlipayCashOutApplication) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 支付宝提现申请请求对象
type AliPayCashOutApplicationReqeust struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//提现金额
	CashOutAmount string `protobuf:"bytes,1,opt,name=cashOutAmount,proto3" json:"cashOutAmount,omitempty"`
	//账户
	Account string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	//真实姓名
	RealName string `protobuf:"bytes,3,opt,name=realName,proto3" json:"realName,omitempty"`
	//备注
	Remarks string `protobuf:"bytes,5,opt,name=remarks,proto3" json:"remarks,omitempty"`
}

func (x *AliPayCashOutApplicationReqeust) Reset() {
	*x = AliPayCashOutApplicationReqeust{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AliPayCashOutApplicationReqeust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AliPayCashOutApplicationReqeust) ProtoMessage() {}

func (x *AliPayCashOutApplicationReqeust) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AliPayCashOutApplicationReqeust.ProtoReflect.Descriptor instead.
func (*AliPayCashOutApplicationReqeust) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{6}
}

func (x *AliPayCashOutApplicationReqeust) GetCashOutAmount() string {
	if x != nil {
		return x.CashOutAmount
	}
	return ""
}

func (x *AliPayCashOutApplicationReqeust) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *AliPayCashOutApplicationReqeust) GetRealName() string {
	if x != nil {
		return x.RealName
	}
	return ""
}

func (x *AliPayCashOutApplicationReqeust) GetRemarks() string {
	if x != nil {
		return x.Remarks
	}
	return ""
}

// 提现请求对象
type AliCashOutReqeust struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//提现金额
	TransAmount string `protobuf:"bytes,1,opt,name=transAmount,proto3" json:"transAmount,omitempty"`
	//支付宝账户
	Identity string `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`
	//姓名
	Nanem string `protobuf:"bytes,3,opt,name=nanem,proto3" json:"nanem,omitempty"`
	//备注
	Remark string `protobuf:"bytes,4,opt,name=remark,proto3" json:"remark,omitempty"`
}

func (x *AliCashOutReqeust) Reset() {
	*x = AliCashOutReqeust{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AliCashOutReqeust) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AliCashOutReqeust) ProtoMessage() {}

func (x *AliCashOutReqeust) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AliCashOutReqeust.ProtoReflect.Descriptor instead.
func (*AliCashOutReqeust) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{7}
}

func (x *AliCashOutReqeust) GetTransAmount() string {
	if x != nil {
		return x.TransAmount
	}
	return ""
}

func (x *AliCashOutReqeust) GetIdentity() string {
	if x != nil {
		return x.Identity
	}
	return ""
}

func (x *AliCashOutReqeust) GetNanem() string {
	if x != nil {
		return x.Nanem
	}
	return ""
}

func (x *AliCashOutReqeust) GetRemark() string {
	if x != nil {
		return x.Remark
	}
	return ""
}

// 查询微信支付记录请求对象
type QueryWechatPaymentRecordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//页号
	PageNum int64 `protobuf:"varint,1,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	//页大小
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	// 微信支付订单号
	TransactionID string `protobuf:"bytes,3,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	// 交易类型
	TradeType string `protobuf:"bytes,4,opt,name=tradeType,proto3" json:"tradeType,omitempty"`
	// 交易状态
	TradeState string `protobuf:"bytes,5,opt,name=tradeState,proto3" json:"tradeState,omitempty"`
	//交易时间从
	TradingHoursFrom string `protobuf:"bytes,6,opt,name=tradingHoursFrom,proto3" json:"tradingHoursFrom,omitempty"`
	//交易时间到
	TradingHoursTo string `protobuf:"bytes,7,opt,name=tradingHoursTo,proto3" json:"tradingHoursTo,omitempty"`
	// 用户id
	UserID int64 `protobuf:"varint,8,opt,name=userID,proto3" json:"userID,omitempty"`
	//商户订单号
	OutTradeNo string `protobuf:"bytes,9,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
}

func (x *QueryWechatPaymentRecordsRequest) Reset() {
	*x = QueryWechatPaymentRecordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryWechatPaymentRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryWechatPaymentRecordsRequest) ProtoMessage() {}

func (x *QueryWechatPaymentRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryWechatPaymentRecordsRequest.ProtoReflect.Descriptor instead.
func (*QueryWechatPaymentRecordsRequest) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{8}
}

func (x *QueryWechatPaymentRecordsRequest) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryWechatPaymentRecordsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryWechatPaymentRecordsRequest) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

func (x *QueryWechatPaymentRecordsRequest) GetTradeType() string {
	if x != nil {
		return x.TradeType
	}
	return ""
}

func (x *QueryWechatPaymentRecordsRequest) GetTradeState() string {
	if x != nil {
		return x.TradeState
	}
	return ""
}

func (x *QueryWechatPaymentRecordsRequest) GetTradingHoursFrom() string {
	if x != nil {
		return x.TradingHoursFrom
	}
	return ""
}

func (x *QueryWechatPaymentRecordsRequest) GetTradingHoursTo() string {
	if x != nil {
		return x.TradingHoursTo
	}
	return ""
}

func (x *QueryWechatPaymentRecordsRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *QueryWechatPaymentRecordsRequest) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

// 查询支付宝支付记录请求对象
type QueryAliPaymentRecordsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//页号
	PageNum int64 `protobuf:"varint,1,opt,name=pageNum,proto3" json:"pageNum,omitempty"`
	//页大小
	PageSize int64 `protobuf:"varint,2,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	//交易时间从
	TradingHoursFrom string `protobuf:"bytes,3,opt,name=tradingHoursFrom,proto3" json:"tradingHoursFrom,omitempty"`
	//交易时间到
	TradingHoursTo string `protobuf:"bytes,4,opt,name=tradingHoursTo,proto3" json:"tradingHoursTo,omitempty"`
	// 交易状态
	TradeStatus string `protobuf:"bytes,5,opt,name=tradeStatus,proto3" json:"tradeStatus,omitempty"`
	// 用户id
	UserID int64 `protobuf:"varint,6,opt,name=userID,proto3" json:"userID,omitempty"`
	//商户订单号
	OutTradeNo string `protobuf:"bytes,7,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
	//支付宝交易号
	TradeNo string `protobuf:"bytes,8,opt,name=tradeNo,proto3" json:"tradeNo,omitempty"`
}

func (x *QueryAliPaymentRecordsRequest) Reset() {
	*x = QueryAliPaymentRecordsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryAliPaymentRecordsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryAliPaymentRecordsRequest) ProtoMessage() {}

func (x *QueryAliPaymentRecordsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryAliPaymentRecordsRequest.ProtoReflect.Descriptor instead.
func (*QueryAliPaymentRecordsRequest) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{9}
}

func (x *QueryAliPaymentRecordsRequest) GetPageNum() int64 {
	if x != nil {
		return x.PageNum
	}
	return 0
}

func (x *QueryAliPaymentRecordsRequest) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *QueryAliPaymentRecordsRequest) GetTradingHoursFrom() string {
	if x != nil {
		return x.TradingHoursFrom
	}
	return ""
}

func (x *QueryAliPaymentRecordsRequest) GetTradingHoursTo() string {
	if x != nil {
		return x.TradingHoursTo
	}
	return ""
}

func (x *QueryAliPaymentRecordsRequest) GetTradeStatus() string {
	if x != nil {
		return x.TradeStatus
	}
	return ""
}

func (x *QueryAliPaymentRecordsRequest) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *QueryAliPaymentRecordsRequest) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *QueryAliPaymentRecordsRequest) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

// 支付宝支付记录响应对象
type AliPaymentRecordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 总的记录数
	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// 每页显示的大小
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// 当前页
	Current int64 `protobuf:"varint,3,opt,name=current,proto3" json:"current,omitempty"`
	// 当前页内容
	Rows []*AliPaymentRecord `protobuf:"bytes,4,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *AliPaymentRecordsResponse) Reset() {
	*x = AliPaymentRecordsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AliPaymentRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AliPaymentRecordsResponse) ProtoMessage() {}

func (x *AliPaymentRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AliPaymentRecordsResponse.ProtoReflect.Descriptor instead.
func (*AliPaymentRecordsResponse) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{10}
}

func (x *AliPaymentRecordsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *AliPaymentRecordsResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *AliPaymentRecordsResponse) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *AliPaymentRecordsResponse) GetRows() []*AliPaymentRecord {
	if x != nil {
		return x.Rows
	}
	return nil
}

// 微信支付记录响应对象
type WechatPaymentRecordsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 总的记录数
	Total int64 `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	// 每页显示的大小
	Size int64 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`
	// 当前页
	Current int64 `protobuf:"varint,3,opt,name=current,proto3" json:"current,omitempty"`
	// 当前页内容
	Rows []*WechatPaymentRecord `protobuf:"bytes,4,rep,name=rows,proto3" json:"rows,omitempty"`
}

func (x *WechatPaymentRecordsResponse) Reset() {
	*x = WechatPaymentRecordsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatPaymentRecordsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatPaymentRecordsResponse) ProtoMessage() {}

func (x *WechatPaymentRecordsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatPaymentRecordsResponse.ProtoReflect.Descriptor instead.
func (*WechatPaymentRecordsResponse) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{11}
}

func (x *WechatPaymentRecordsResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *WechatPaymentRecordsResponse) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *WechatPaymentRecordsResponse) GetCurrent() int64 {
	if x != nil {
		return x.Current
	}
	return 0
}

func (x *WechatPaymentRecordsResponse) GetRows() []*WechatPaymentRecord {
	if x != nil {
		return x.Rows
	}
	return nil
}

// 微信支付记录
type WechatPaymentRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 主键 ID
	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 微信扫码通知记录id
	WechatScanCodeID int64 `protobuf:"varint,2,opt,name=wechatScanCodeID,proto3" json:"wechatScanCodeID,omitempty"`
	// 商户号
	Mchid string `protobuf:"bytes,3,opt,name=mchid,proto3" json:"mchid,omitempty"`
	// 应用 id
	Appid string `protobuf:"bytes,4,opt,name=appid,proto3" json:"appid,omitempty"`
	// 商户订单号
	OutTradeNo string `protobuf:"bytes,5,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
	// 微信支付订单号
	TransactionID string `protobuf:"bytes,6,opt,name=transactionID,proto3" json:"transactionID,omitempty"`
	// 交易类型
	TradeType string `protobuf:"bytes,7,opt,name=tradeType,proto3" json:"tradeType,omitempty"`
	// 交易状态
	TradeState string `protobuf:"bytes,8,opt,name=tradeState,proto3" json:"tradeState,omitempty"`
	// 交易状态描述
	TradeStateDesc string `protobuf:"bytes,9,opt,name=tradeStateDesc,proto3" json:"tradeStateDesc,omitempty"`
	// 付款银行
	BankType string `protobuf:"bytes,10,opt,name=bankType,proto3" json:"bankType,omitempty"`
	// 附加数据
	Attach string `protobuf:"bytes,11,opt,name=attach,proto3" json:"attach,omitempty"`
	// 支付完成时间
	SuccessTime string `protobuf:"bytes,12,opt,name=successTime,proto3" json:"successTime,omitempty"`
	// 用户标识
	PayerOpenid string `protobuf:"bytes,13,opt,name=payerOpenid,proto3" json:"payerOpenid,omitempty"`
	// 订单金额
	AmountTotal string `protobuf:"bytes,14,opt,name=amountTotal,proto3" json:"amountTotal,omitempty"`
	// 用户支付金额
	AmountPayerTotal string `protobuf:"bytes,15,opt,name=amountPayerTotal,proto3" json:"amountPayerTotal,omitempty"`
	// 货币类型
	AmountCurrency string `protobuf:"bytes,16,opt,name=amountCurrency,proto3" json:"amountCurrency,omitempty"`
	// 用户支付货币类型
	AmountPayerCurrency string `protobuf:"bytes,17,opt,name=amountPayerCurrency,proto3" json:"amountPayerCurrency,omitempty"`
	// 创建时间
	CreateTime string `protobuf:"bytes,18,opt,name=createTime,proto3" json:"createTime,omitempty"`
	// 更新时间
	UpdateTime string `protobuf:"bytes,19,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	// 用户id
	UserID int64 `protobuf:"varint,20,opt,name=userID,proto3" json:"userID,omitempty"`
}

func (x *WechatPaymentRecord) Reset() {
	*x = WechatPaymentRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WechatPaymentRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WechatPaymentRecord) ProtoMessage() {}

func (x *WechatPaymentRecord) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WechatPaymentRecord.ProtoReflect.Descriptor instead.
func (*WechatPaymentRecord) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{12}
}

func (x *WechatPaymentRecord) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *WechatPaymentRecord) GetWechatScanCodeID() int64 {
	if x != nil {
		return x.WechatScanCodeID
	}
	return 0
}

func (x *WechatPaymentRecord) GetMchid() string {
	if x != nil {
		return x.Mchid
	}
	return ""
}

func (x *WechatPaymentRecord) GetAppid() string {
	if x != nil {
		return x.Appid
	}
	return ""
}

func (x *WechatPaymentRecord) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *WechatPaymentRecord) GetTransactionID() string {
	if x != nil {
		return x.TransactionID
	}
	return ""
}

func (x *WechatPaymentRecord) GetTradeType() string {
	if x != nil {
		return x.TradeType
	}
	return ""
}

func (x *WechatPaymentRecord) GetTradeState() string {
	if x != nil {
		return x.TradeState
	}
	return ""
}

func (x *WechatPaymentRecord) GetTradeStateDesc() string {
	if x != nil {
		return x.TradeStateDesc
	}
	return ""
}

func (x *WechatPaymentRecord) GetBankType() string {
	if x != nil {
		return x.BankType
	}
	return ""
}

func (x *WechatPaymentRecord) GetAttach() string {
	if x != nil {
		return x.Attach
	}
	return ""
}

func (x *WechatPaymentRecord) GetSuccessTime() string {
	if x != nil {
		return x.SuccessTime
	}
	return ""
}

func (x *WechatPaymentRecord) GetPayerOpenid() string {
	if x != nil {
		return x.PayerOpenid
	}
	return ""
}

func (x *WechatPaymentRecord) GetAmountTotal() string {
	if x != nil {
		return x.AmountTotal
	}
	return ""
}

func (x *WechatPaymentRecord) GetAmountPayerTotal() string {
	if x != nil {
		return x.AmountPayerTotal
	}
	return ""
}

func (x *WechatPaymentRecord) GetAmountCurrency() string {
	if x != nil {
		return x.AmountCurrency
	}
	return ""
}

func (x *WechatPaymentRecord) GetAmountPayerCurrency() string {
	if x != nil {
		return x.AmountPayerCurrency
	}
	return ""
}

func (x *WechatPaymentRecord) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *WechatPaymentRecord) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

func (x *WechatPaymentRecord) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type AliPaymentRecord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 主键ID
	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	// 支付宝扫码通知记录id
	AliScanCodeID int64 `protobuf:"varint,2,opt,name=aliScanCodeID,proto3" json:"aliScanCodeID,omitempty"`
	// 卖家Id
	SellerID string `protobuf:"bytes,3,opt,name=sellerID,proto3" json:"sellerID,omitempty"`
	// 版本号
	Version string `protobuf:"bytes,4,opt,name=version,proto3" json:"version,omitempty"`
	// 总金额
	TotalAmount string `protobuf:"bytes,5,opt,name=totalAmount,proto3" json:"totalAmount,omitempty"`
	// 卖家邮箱
	SellerEmail string `protobuf:"bytes,6,opt,name=sellerEmail,proto3" json:"sellerEmail,omitempty"`
	// 商户订单号
	OutTradeNo string `protobuf:"bytes,7,opt,name=outTradeNo,proto3" json:"outTradeNo,omitempty"`
	// 订单创建时间
	GmtCreate string `protobuf:"bytes,8,opt,name=gmtCreate,proto3" json:"gmtCreate,omitempty"`
	// 实收金额
	ReceiptAmount string `protobuf:"bytes,9,opt,name=receiptAmount,proto3" json:"receiptAmount,omitempty"`
	// 应用Id
	AppID string `protobuf:"bytes,10,opt,name=appID,proto3" json:"appID,omitempty"`
	// 通知时间
	NotifyTime string `protobuf:"bytes,11,opt,name=notifyTime,proto3" json:"notifyTime,omitempty"`
	// 支付宝交易号
	TradeNo string `protobuf:"bytes,12,opt,name=tradeNo,proto3" json:"tradeNo,omitempty"`
	// 买家登录id
	BuyerLogonID string `protobuf:"bytes,13,opt,name=buyerLogonID,proto3" json:"buyerLogonID,omitempty"`
	// 通知Id
	NotifyID string `protobuf:"bytes,14,opt,name=notifyID,proto3" json:"notifyID,omitempty"`
	// 付款时间
	GmtPayment string `protobuf:"bytes,15,opt,name=gmtPayment,proto3" json:"gmtPayment,omitempty"`
	// 授权应用id
	AuthAppID string `protobuf:"bytes,16,opt,name=authAppID,proto3" json:"authAppID,omitempty"`
	// 订单标题
	Subject string `protobuf:"bytes,17,opt,name=subject,proto3" json:"subject,omitempty"`
	// 买家Id
	BuyerID string `protobuf:"bytes,18,opt,name=buyerID,proto3" json:"buyerID,omitempty"`
	// 支付金额信息
	FundBillList string `protobuf:"bytes,19,opt,name=fundBillList,proto3" json:"fundBillList,omitempty"`
	// 开票金额
	InvoiceAmount string `protobuf:"bytes,20,opt,name=invoiceAmount,proto3" json:"invoiceAmount,omitempty"`
	// 签名类型
	SignType string `protobuf:"bytes,21,opt,name=signType,proto3" json:"signType,omitempty"`
	// 雨点支付金额
	PointAmount string `protobuf:"bytes,22,opt,name=pointAmount,proto3" json:"pointAmount,omitempty"`
	// 编码格式
	Charset string `protobuf:"bytes,23,opt,name=charset,proto3" json:"charset,omitempty"`
	// 买家付款金额
	BuyerPayAmount string `protobuf:"bytes,24,opt,name=buyerPayAmount,proto3" json:"buyerPayAmount,omitempty"`
	// 通知类型
	NotifyType string `protobuf:"bytes,25,opt,name=notifyType,proto3" json:"notifyType,omitempty"`
	// 交易状态
	TradeStatus string `protobuf:"bytes,26,opt,name=tradeStatus,proto3" json:"tradeStatus,omitempty"`
	// 用户id
	UserID int64 `protobuf:"varint,27,opt,name=userID,proto3" json:"userID,omitempty"`
	// 创建时间
	CreateTime string `protobuf:"bytes,28,opt,name=createTime,proto3" json:"createTime,omitempty"`
	// 更新时间
	UpdateTime string `protobuf:"bytes,29,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
}

func (x *AliPaymentRecord) Reset() {
	*x = AliPaymentRecord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AliPaymentRecord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AliPaymentRecord) ProtoMessage() {}

func (x *AliPaymentRecord) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AliPaymentRecord.ProtoReflect.Descriptor instead.
func (*AliPaymentRecord) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{13}
}

func (x *AliPaymentRecord) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AliPaymentRecord) GetAliScanCodeID() int64 {
	if x != nil {
		return x.AliScanCodeID
	}
	return 0
}

func (x *AliPaymentRecord) GetSellerID() string {
	if x != nil {
		return x.SellerID
	}
	return ""
}

func (x *AliPaymentRecord) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *AliPaymentRecord) GetTotalAmount() string {
	if x != nil {
		return x.TotalAmount
	}
	return ""
}

func (x *AliPaymentRecord) GetSellerEmail() string {
	if x != nil {
		return x.SellerEmail
	}
	return ""
}

func (x *AliPaymentRecord) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *AliPaymentRecord) GetGmtCreate() string {
	if x != nil {
		return x.GmtCreate
	}
	return ""
}

func (x *AliPaymentRecord) GetReceiptAmount() string {
	if x != nil {
		return x.ReceiptAmount
	}
	return ""
}

func (x *AliPaymentRecord) GetAppID() string {
	if x != nil {
		return x.AppID
	}
	return ""
}

func (x *AliPaymentRecord) GetNotifyTime() string {
	if x != nil {
		return x.NotifyTime
	}
	return ""
}

func (x *AliPaymentRecord) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *AliPaymentRecord) GetBuyerLogonID() string {
	if x != nil {
		return x.BuyerLogonID
	}
	return ""
}

func (x *AliPaymentRecord) GetNotifyID() string {
	if x != nil {
		return x.NotifyID
	}
	return ""
}

func (x *AliPaymentRecord) GetGmtPayment() string {
	if x != nil {
		return x.GmtPayment
	}
	return ""
}

func (x *AliPaymentRecord) GetAuthAppID() string {
	if x != nil {
		return x.AuthAppID
	}
	return ""
}

func (x *AliPaymentRecord) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *AliPaymentRecord) GetBuyerID() string {
	if x != nil {
		return x.BuyerID
	}
	return ""
}

func (x *AliPaymentRecord) GetFundBillList() string {
	if x != nil {
		return x.FundBillList
	}
	return ""
}

func (x *AliPaymentRecord) GetInvoiceAmount() string {
	if x != nil {
		return x.InvoiceAmount
	}
	return ""
}

func (x *AliPaymentRecord) GetSignType() string {
	if x != nil {
		return x.SignType
	}
	return ""
}

func (x *AliPaymentRecord) GetPointAmount() string {
	if x != nil {
		return x.PointAmount
	}
	return ""
}

func (x *AliPaymentRecord) GetCharset() string {
	if x != nil {
		return x.Charset
	}
	return ""
}

func (x *AliPaymentRecord) GetBuyerPayAmount() string {
	if x != nil {
		return x.BuyerPayAmount
	}
	return ""
}

func (x *AliPaymentRecord) GetNotifyType() string {
	if x != nil {
		return x.NotifyType
	}
	return ""
}

func (x *AliPaymentRecord) GetTradeStatus() string {
	if x != nil {
		return x.TradeStatus
	}
	return ""
}

func (x *AliPaymentRecord) GetUserID() int64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *AliPaymentRecord) GetCreateTime() string {
	if x != nil {
		return x.CreateTime
	}
	return ""
}

func (x *AliPaymentRecord) GetUpdateTime() string {
	if x != nil {
		return x.UpdateTime
	}
	return ""
}

// 钱包购买请求对象
type WalletBuyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//用户id
	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	//交易金额
	PayAmount string `protobuf:"bytes,3,opt,name=payAmount,proto3" json:"payAmount,omitempty"`
	//购买雨点
	BuyIntegral string `protobuf:"bytes,4,opt,name=buyIntegral,proto3" json:"buyIntegral,omitempty"`
}

func (x *WalletBuyRequest) Reset() {
	*x = WalletBuyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WalletBuyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WalletBuyRequest) ProtoMessage() {}

func (x *WalletBuyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WalletBuyRequest.ProtoReflect.Descriptor instead.
func (*WalletBuyRequest) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{14}
}

func (x *WalletBuyRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *WalletBuyRequest) GetPayAmount() string {
	if x != nil {
		return x.PayAmount
	}
	return ""
}

func (x *WalletBuyRequest) GetBuyIntegral() string {
	if x != nil {
		return x.BuyIntegral
	}
	return ""
}

type NotifyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// App Id
	AuthAppId string `protobuf:"bytes,1,opt,name=auth_app_id,json=authAppId,proto3" json:"auth_app_id,omitempty"`
	// 通知时间
	NotifyTime string `protobuf:"bytes,2,opt,name=notify_time,json=notifyTime,proto3" json:"notify_time,omitempty"`
	// 通知类型
	NotifyType string `protobuf:"bytes,3,opt,name=notify_type,json=notifyType,proto3" json:"notify_type,omitempty"`
	// 通知校验ID
	NotifyId string `protobuf:"bytes,4,opt,name=notify_id,json=notifyId,proto3" json:"notify_id,omitempty"`
	// 开发者的app_id
	AppId string `protobuf:"bytes,5,opt,name=app_id,json=appId,proto3" json:"app_id,omitempty"`
	// 编码格式
	Charset string `protobuf:"bytes,6,opt,name=charset,proto3" json:"charset,omitempty"`
	// 接口版本
	Version string `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	// 签名类型
	SignType string `protobuf:"bytes,8,opt,name=sign_type,json=signType,proto3" json:"sign_type,omitempty"`
	// 签名
	Sign string `protobuf:"bytes,9,opt,name=sign,proto3" json:"sign,omitempty"`
	// 支付宝交易号
	TradeNo string `protobuf:"bytes,10,opt,name=trade_no,json=tradeNo,proto3" json:"trade_no,omitempty"`
	// 商户订单号
	OutTradeNo string `protobuf:"bytes,11,opt,name=out_trade_no,json=outTradeNo,proto3" json:"out_trade_no,omitempty"`
	// 退款请求编号
	OutRequestNo string `protobuf:"bytes,12,opt,name=out_request_no,json=outRequestNo,proto3" json:"out_request_no,omitempty"`
	// 商户业务号
	OutBizNo string `protobuf:"bytes,13,opt,name=out_biz_no,json=outBizNo,proto3" json:"out_biz_no,omitempty"`
	// 买家支付宝用户号
	BuyerId string `protobuf:"bytes,14,opt,name=buyer_id,json=buyerId,proto3" json:"buyer_id,omitempty"`
	// 买家支付宝账号
	BuyerLogonId string `protobuf:"bytes,15,opt,name=buyer_logon_id,json=buyerLogonId,proto3" json:"buyer_logon_id,omitempty"`
	// 卖家支付宝用户号
	SellerId string `protobuf:"bytes,16,opt,name=seller_id,json=sellerId,proto3" json:"seller_id,omitempty"`
	// 卖家支付宝账号
	SellerEmail string `protobuf:"bytes,17,opt,name=seller_email,json=sellerEmail,proto3" json:"seller_email,omitempty"`
	// 交易状态
	TradeStatus string `protobuf:"bytes,18,opt,name=trade_status,json=tradeStatus,proto3" json:"trade_status,omitempty"`
	// 退款状态
	RefundStatus string `protobuf:"bytes,19,opt,name=refund_status,json=refundStatus,proto3" json:"refund_status,omitempty"`
	// 退款原因
	RefundReason string `protobuf:"bytes,20,opt,name=refund_reason,json=refundReason,proto3" json:"refund_reason,omitempty"`
	// 退款金额
	RefundAmount string `protobuf:"bytes,21,opt,name=refund_amount,json=refundAmount,proto3" json:"refund_amount,omitempty"`
	// 订单金额
	TotalAmount string `protobuf:"bytes,22,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	// 实收金额
	ReceiptAmount string `protobuf:"bytes,23,opt,name=receipt_amount,json=receiptAmount,proto3" json:"receipt_amount,omitempty"`
	// 开票金额
	InvoiceAmount string `protobuf:"bytes,24,opt,name=invoice_amount,json=invoiceAmount,proto3" json:"invoice_amount,omitempty"`
	// 付款金额
	BuyerPayAmount string `protobuf:"bytes,25,opt,name=buyer_pay_amount,json=buyerPayAmount,proto3" json:"buyer_pay_amount,omitempty"`
	// 集分宝金额
	PointAmount string `protobuf:"bytes,26,opt,name=point_amount,json=pointAmount,proto3" json:"point_amount,omitempty"`
	// 总退款金额
	RefundFee string `protobuf:"bytes,27,opt,name=refund_fee,json=refundFee,proto3" json:"refund_fee,omitempty"`
	// 商品的标题/交易标题/订单标题/订单关键字等，是请求时对应的参数，原样通知回来。
	Subject string `protobuf:"bytes,28,opt,name=subject,proto3" json:"subject,omitempty"`
	// 商品描述
	Body string `protobuf:"bytes,29,opt,name=body,proto3" json:"body,omitempty"`
	// 交易创建时间
	GmtCreate string `protobuf:"bytes,30,opt,name=gmt_create,json=gmtCreate,proto3" json:"gmt_create,omitempty"`
	// 交易付款时间
	GmtPayment string `protobuf:"bytes,31,opt,name=gmt_payment,json=gmtPayment,proto3" json:"gmt_payment,omitempty"`
	// 交易退款时间
	GmtRefund string `protobuf:"bytes,32,opt,name=gmt_refund,json=gmtRefund,proto3" json:"gmt_refund,omitempty"`
	// 交易结束时间
	GmtClose string `protobuf:"bytes,33,opt,name=gmt_close,json=gmtClose,proto3" json:"gmt_close,omitempty"`
	// 支付金额信息
	FundBillList string `protobuf:"bytes,34,opt,name=fund_bill_list,json=fundBillList,proto3" json:"fund_bill_list,omitempty"`
	// 回传参数
	PassbackParams string `protobuf:"bytes,35,opt,name=passback_params,json=passbackParams,proto3" json:"passback_params,omitempty"`
	// 优惠券信息
	VoucherDetailList string `protobuf:"bytes,36,opt,name=voucher_detail_list,json=voucherDetailList,proto3" json:"voucher_detail_list,omitempty"`
	// 支付宝签约号
	AgreementNo string `protobuf:"bytes,37,opt,name=agreement_no,json=agreementNo,proto3" json:"agreement_no,omitempty"`
	// 商户自定义签约号
	ExternalAgreementNo string `protobuf:"bytes,38,opt,name=external_agreement_no,json=externalAgreementNo,proto3" json:"external_agreement_no,omitempty"`
	// 银行卡冲退状态
	DbackStatus string `protobuf:"bytes,39,opt,name=dback_status,json=dbackStatus,proto3" json:"dback_status,omitempty"`
	// 银行卡冲退金额
	DbackAmount string `protobuf:"bytes,40,opt,name=dback_amount,json=dbackAmount,proto3" json:"dback_amount,omitempty"`
	// 银行响应时间
	BankAckTime string `protobuf:"bytes,41,opt,name=bank_ack_time,json=bankAckTime,proto3" json:"bank_ack_time,omitempty"`
}

func (x *NotifyRequest) Reset() {
	*x = NotifyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyRequest) ProtoMessage() {}

func (x *NotifyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyRequest.ProtoReflect.Descriptor instead.
func (*NotifyRequest) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{15}
}

func (x *NotifyRequest) GetAuthAppId() string {
	if x != nil {
		return x.AuthAppId
	}
	return ""
}

func (x *NotifyRequest) GetNotifyTime() string {
	if x != nil {
		return x.NotifyTime
	}
	return ""
}

func (x *NotifyRequest) GetNotifyType() string {
	if x != nil {
		return x.NotifyType
	}
	return ""
}

func (x *NotifyRequest) GetNotifyId() string {
	if x != nil {
		return x.NotifyId
	}
	return ""
}

func (x *NotifyRequest) GetAppId() string {
	if x != nil {
		return x.AppId
	}
	return ""
}

func (x *NotifyRequest) GetCharset() string {
	if x != nil {
		return x.Charset
	}
	return ""
}

func (x *NotifyRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *NotifyRequest) GetSignType() string {
	if x != nil {
		return x.SignType
	}
	return ""
}

func (x *NotifyRequest) GetSign() string {
	if x != nil {
		return x.Sign
	}
	return ""
}

func (x *NotifyRequest) GetTradeNo() string {
	if x != nil {
		return x.TradeNo
	}
	return ""
}

func (x *NotifyRequest) GetOutTradeNo() string {
	if x != nil {
		return x.OutTradeNo
	}
	return ""
}

func (x *NotifyRequest) GetOutRequestNo() string {
	if x != nil {
		return x.OutRequestNo
	}
	return ""
}

func (x *NotifyRequest) GetOutBizNo() string {
	if x != nil {
		return x.OutBizNo
	}
	return ""
}

func (x *NotifyRequest) GetBuyerId() string {
	if x != nil {
		return x.BuyerId
	}
	return ""
}

func (x *NotifyRequest) GetBuyerLogonId() string {
	if x != nil {
		return x.BuyerLogonId
	}
	return ""
}

func (x *NotifyRequest) GetSellerId() string {
	if x != nil {
		return x.SellerId
	}
	return ""
}

func (x *NotifyRequest) GetSellerEmail() string {
	if x != nil {
		return x.SellerEmail
	}
	return ""
}

func (x *NotifyRequest) GetTradeStatus() string {
	if x != nil {
		return x.TradeStatus
	}
	return ""
}

func (x *NotifyRequest) GetRefundStatus() string {
	if x != nil {
		return x.RefundStatus
	}
	return ""
}

func (x *NotifyRequest) GetRefundReason() string {
	if x != nil {
		return x.RefundReason
	}
	return ""
}

func (x *NotifyRequest) GetRefundAmount() string {
	if x != nil {
		return x.RefundAmount
	}
	return ""
}

func (x *NotifyRequest) GetTotalAmount() string {
	if x != nil {
		return x.TotalAmount
	}
	return ""
}

func (x *NotifyRequest) GetReceiptAmount() string {
	if x != nil {
		return x.ReceiptAmount
	}
	return ""
}

func (x *NotifyRequest) GetInvoiceAmount() string {
	if x != nil {
		return x.InvoiceAmount
	}
	return ""
}

func (x *NotifyRequest) GetBuyerPayAmount() string {
	if x != nil {
		return x.BuyerPayAmount
	}
	return ""
}

func (x *NotifyRequest) GetPointAmount() string {
	if x != nil {
		return x.PointAmount
	}
	return ""
}

func (x *NotifyRequest) GetRefundFee() string {
	if x != nil {
		return x.RefundFee
	}
	return ""
}

func (x *NotifyRequest) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *NotifyRequest) GetBody() string {
	if x != nil {
		return x.Body
	}
	return ""
}

func (x *NotifyRequest) GetGmtCreate() string {
	if x != nil {
		return x.GmtCreate
	}
	return ""
}

func (x *NotifyRequest) GetGmtPayment() string {
	if x != nil {
		return x.GmtPayment
	}
	return ""
}

func (x *NotifyRequest) GetGmtRefund() string {
	if x != nil {
		return x.GmtRefund
	}
	return ""
}

func (x *NotifyRequest) GetGmtClose() string {
	if x != nil {
		return x.GmtClose
	}
	return ""
}

func (x *NotifyRequest) GetFundBillList() string {
	if x != nil {
		return x.FundBillList
	}
	return ""
}

func (x *NotifyRequest) GetPassbackParams() string {
	if x != nil {
		return x.PassbackParams
	}
	return ""
}

func (x *NotifyRequest) GetVoucherDetailList() string {
	if x != nil {
		return x.VoucherDetailList
	}
	return ""
}

func (x *NotifyRequest) GetAgreementNo() string {
	if x != nil {
		return x.AgreementNo
	}
	return ""
}

func (x *NotifyRequest) GetExternalAgreementNo() string {
	if x != nil {
		return x.ExternalAgreementNo
	}
	return ""
}

func (x *NotifyRequest) GetDbackStatus() string {
	if x != nil {
		return x.DbackStatus
	}
	return ""
}

func (x *NotifyRequest) GetDbackAmount() string {
	if x != nil {
		return x.DbackAmount
	}
	return ""
}

func (x *NotifyRequest) GetBankAckTime() string {
	if x != nil {
		return x.BankAckTime
	}
	return ""
}

type NotifyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *NotifyResponse) Reset() {
	*x = NotifyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotifyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotifyResponse) ProtoMessage() {}

func (x *NotifyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotifyResponse.ProtoReflect.Descriptor instead.
func (*NotifyResponse) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{16}
}

func (x *NotifyResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 获取支付二维码
type GetPaymentQRCodeRequet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//用户id
	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	//支付类型
	PayType string `protobuf:"bytes,2,opt,name=payType,proto3" json:"payType,omitempty"`
	//交易金额
	PayAmount string `protobuf:"bytes,3,opt,name=payAmount,proto3" json:"payAmount,omitempty"`
	//交易code码
	RetryUuid string `protobuf:"bytes,4,opt,name=retryUuid,proto3" json:"retryUuid,omitempty"`
	//充值类型:[雨点:INTEGRAL,钱包:WALLET]
	RechargeType string `protobuf:"bytes,5,opt,name=rechargeType,proto3" json:"rechargeType,omitempty"`
}

func (x *GetPaymentQRCodeRequet) Reset() {
	*x = GetPaymentQRCodeRequet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentQRCodeRequet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentQRCodeRequet) ProtoMessage() {}

func (x *GetPaymentQRCodeRequet) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentQRCodeRequet.ProtoReflect.Descriptor instead.
func (*GetPaymentQRCodeRequet) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{17}
}

func (x *GetPaymentQRCodeRequet) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetPaymentQRCodeRequet) GetPayType() string {
	if x != nil {
		return x.PayType
	}
	return ""
}

func (x *GetPaymentQRCodeRequet) GetPayAmount() string {
	if x != nil {
		return x.PayAmount
	}
	return ""
}

func (x *GetPaymentQRCodeRequet) GetRetryUuid() string {
	if x != nil {
		return x.RetryUuid
	}
	return ""
}

func (x *GetPaymentQRCodeRequet) GetRechargeType() string {
	if x != nil {
		return x.RechargeType
	}
	return ""
}

// 获取支付二维码请求对象
type GetPaymentQRCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//响应码 200 代表成功
	Code int32 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// 消息
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	//响应的数据
	Data *PaymentQRCode `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *GetPaymentQRCodeResponse) Reset() {
	*x = GetPaymentQRCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPaymentQRCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPaymentQRCodeResponse) ProtoMessage() {}

func (x *GetPaymentQRCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPaymentQRCodeResponse.ProtoReflect.Descriptor instead.
func (*GetPaymentQRCodeResponse) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{18}
}

func (x *GetPaymentQRCodeResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *GetPaymentQRCodeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPaymentQRCodeResponse) GetData() *PaymentQRCode {
	if x != nil {
		return x.Data
	}
	return nil
}

// 获取二维码返回的数据
type PaymentQRCode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	//支付链接需要生成二维码
	Url string `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`
	//重试uuid
	RetryUuid string `protobuf:"bytes,2,opt,name=retryUuid,proto3" json:"retryUuid,omitempty"`
}

func (x *PaymentQRCode) Reset() {
	*x = PaymentQRCode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pay_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PaymentQRCode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PaymentQRCode) ProtoMessage() {}

func (x *PaymentQRCode) ProtoReflect() protoreflect.Message {
	mi := &file_pay_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PaymentQRCode.ProtoReflect.Descriptor instead.
func (*PaymentQRCode) Descriptor() ([]byte, []int) {
	return file_pay_proto_rawDescGZIP(), []int{19}
}

func (x *PaymentQRCode) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *PaymentQRCode) GetRetryUuid() string {
	if x != nil {
		return x.RetryUuid
	}
	return ""
}

var File_pay_proto protoreflect.FileDescriptor

var file_pay_proto_rawDesc = []byte{
	0x0a, 0x09, 0x70, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x54, 0x0a, 0x1a, 0x47,
	0x65, 0x74, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x74,
	0x72, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65,
	0x74, 0x72, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x22, 0xbf, 0x01, 0x0a, 0x17, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a,
	0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x0b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x2a, 0x0a, 0x10, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77, 0x69, 0x74, 0x68, 0x64,
	0x72, 0x61, 0x77, 0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x3e, 0x0a, 0x1a, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x43, 0x61, 0x73,
	0x68, 0x4f, 0x75, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1a, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x43,
	0x61, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x21, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x61, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x65, 0x75, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x65, 0x72, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x65, 0x72, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x65, 0x72, 0x74, 0x4e, 0x6f, 0x22, 0xa8, 0x03, 0x0a,
	0x24, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x43, 0x61, 0x73, 0x68,
	0x4f, 0x75, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12,
	0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63,
	0x61, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72,
	0x73, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x22, 0x0a,
	0x0c, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f,
	0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72,
	0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x54,
	0x6f, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x48, 0x6f, 0x75, 0x72, 0x73, 0x54, 0x6f, 0x22, 0x9a, 0x01, 0x0a, 0x25, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x43, 0x61, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x41, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x43, 0x61, 0x73, 0x68,
	0x4f, 0x75, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x04,
	0x72, 0x6f, 0x77, 0x73, 0x22, 0xfc, 0x02, 0x0a, 0x18, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x43,
	0x61, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x61, 0x73, 0x68, 0x4f, 0x75,
	0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61,
	0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x26, 0x0a,
	0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x22, 0x97, 0x01, 0x0a, 0x1f, 0x41, 0x6c, 0x69, 0x50, 0x61, 0x79, 0x43, 0x61,
	0x73, 0x68, 0x4f, 0x75, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x65, 0x75, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x61, 0x73, 0x68, 0x4f,
	0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x63, 0x61, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x61, 0x6c, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x73, 0x22, 0x7f, 0x0a,
	0x11, 0x41, 0x6c, 0x69, 0x43, 0x61, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x65, 0x75,
	0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6e, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6e, 0x61, 0x6e, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x6d, 0x61, 0x72, 0x6b, 0x22, 0xc8,
	0x02, 0x0a, 0x20, 0x51, 0x75, 0x65, 0x72, 0x79, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a,
	0x10, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x46, 0x72, 0x6f,
	0x6d, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67,
	0x48, 0x6f, 0x75, 0x72, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x54, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x54,
	0x6f, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74,
	0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f,
	0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x22, 0x9d, 0x02, 0x0a, 0x1d, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x41, 0x6c, 0x69, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63,
	0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x61, 0x67, 0x65, 0x4e, 0x75, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x61,
	0x67, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72,
	0x73, 0x46, 0x72, 0x6f, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x72, 0x61,
	0x64, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x12, 0x26, 0x0a,
	0x0e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x6f, 0x75, 0x72, 0x73, 0x54, 0x6f, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x69, 0x6e, 0x67, 0x48, 0x6f,
	0x75, 0x72, 0x73, 0x54, 0x6f, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12,
	0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12,
	0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x22, 0x86, 0x01, 0x0a, 0x19, 0x41, 0x6c,
	0x69, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x72,
	0x6f, 0x77, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x41, 0x6c, 0x69, 0x50,
	0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x04, 0x72, 0x6f,
	0x77, 0x73, 0x22, 0x8c, 0x01, 0x0a, 0x1c, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x0a, 0x04, 0x72, 0x6f, 0x77, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x52, 0x04, 0x72, 0x6f, 0x77,
	0x73, 0x22, 0xa1, 0x05, 0x0a, 0x13, 0x57, 0x65, 0x63, 0x68, 0x61, 0x74, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x77, 0x65, 0x63,
	0x68, 0x61, 0x74, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x77, 0x65, 0x63, 0x68, 0x61, 0x74, 0x53, 0x63, 0x61, 0x6e, 0x43,
	0x6f, 0x64, 0x65, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x63, 0x68, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x63, 0x68, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x61,
	0x70, 0x70, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x69,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e,
	0x6f, 0x12, 0x24, 0x0a, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x72, 0x61, 0x64,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x64, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74,
	0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x44, 0x65, 0x73, 0x63, 0x12, 0x1a, 0x0a,
	0x08, 0x62, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x62, 0x61, 0x6e, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x74, 0x74,
	0x61, 0x63, 0x68, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x74, 0x74, 0x61, 0x63,
	0x68, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x4f, 0x70, 0x65, 0x6e,
	0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x79, 0x65, 0x72, 0x4f,
	0x70, 0x65, 0x6e, 0x69, 0x64, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x54,
	0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x50, 0x61, 0x79, 0x65, 0x72, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x65, 0x72, 0x54, 0x6f,
	0x74, 0x61, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x75, 0x72,
	0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x30, 0x0a, 0x13, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x79, 0x65, 0x72, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x50, 0x61, 0x79, 0x65, 0x72, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x44, 0x22, 0x8c, 0x07, 0x0a, 0x10, 0x41, 0x6c, 0x69, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x6c,
	0x69, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0d, 0x61, 0x6c, 0x69, 0x53, 0x63, 0x61, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x49, 0x44,
	0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x74,
	0x61, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x6c, 0x6c,
	0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73,
	0x65, 0x6c, 0x6c, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x75,
	0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x67, 0x6d,
	0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x67,
	0x6d, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x65,
	0x69, 0x70, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0d, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x61, 0x70, 0x70, 0x49, 0x44, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x61,
	0x70, 0x70, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x22,
	0x0a, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x6e,
	0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x44, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49, 0x44, 0x12, 0x1e,
	0x0a, 0x0a, 0x67, 0x6d, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x67, 0x6d, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x61, 0x75, 0x74, 0x68, 0x41, 0x70, 0x70, 0x49, 0x44, 0x18, 0x10, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x41, 0x70, 0x70, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x75, 0x79, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x75, 0x79, 0x65, 0x72, 0x49, 0x44,
	0x12, 0x22, 0x0a, 0x0c, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x69, 0x6c, 0x6c,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76,
	0x6f, 0x69, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69,
	0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x69,
	0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6f, 0x69,
	0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x72,
	0x73, 0x65, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x72, 0x73,
	0x65, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x62, 0x75, 0x79, 0x65, 0x72, 0x50, 0x61, 0x79, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x18, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x75, 0x79, 0x65,
	0x72, 0x50, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x74, 0x72,
	0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x44, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x22, 0x6a, 0x0a, 0x10, 0x57, 0x61, 0x6c, 0x6c, 0x65, 0x74, 0x42, 0x75,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x20,
	0x0a, 0x0b, 0x62, 0x75, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x75, 0x79, 0x49, 0x6e, 0x74, 0x65, 0x67, 0x72, 0x61, 0x6c,
	0x22, 0xe5, 0x0a, 0x0a, 0x0d, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x61, 0x70, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x75, 0x74, 0x68, 0x41, 0x70, 0x70,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x49,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x61, 0x70, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x61, 0x70, 0x70, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x61, 0x72,
	0x73, 0x65, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x68, 0x61, 0x72, 0x73,
	0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x73, 0x69, 0x67, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x19, 0x0a,
	0x08, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x74, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x5f,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x6e, 0x6f, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x75, 0x74, 0x54, 0x72, 0x61, 0x64, 0x65, 0x4e, 0x6f, 0x12, 0x24, 0x0a, 0x0e, 0x6f, 0x75,
	0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x4e, 0x6f,
	0x12, 0x1c, 0x0a, 0x0a, 0x6f, 0x75, 0x74, 0x5f, 0x62, 0x69, 0x7a, 0x5f, 0x6e, 0x6f, 0x18, 0x0d,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6f, 0x75, 0x74, 0x42, 0x69, 0x7a, 0x4e, 0x6f, 0x12, 0x19,
	0x0a, 0x08, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x62, 0x75, 0x79, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x62, 0x75, 0x79,
	0x65, 0x72, 0x5f, 0x6c, 0x6f, 0x67, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x62, 0x75, 0x79, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x6f, 0x6e, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c,
	0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x11, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x6c, 0x6c, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x21, 0x0a, 0x0c, 0x74, 0x72, 0x61, 0x64, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x72, 0x61, 0x64, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x15, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x63, 0x65, 0x69, 0x70, 0x74, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x70, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x69,
	0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x41, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x28, 0x0a, 0x10, 0x62, 0x75, 0x79, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x79, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x75,
	0x79, 0x65, 0x72, 0x50, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x1b, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x46, 0x65, 0x65, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6f, 0x64, 0x79,
	0x18, 0x1d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x62, 0x6f, 0x64, 0x79, 0x12, 0x1d, 0x0a, 0x0a,
	0x67, 0x6d, 0x74, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x6d, 0x74, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x67,
	0x6d, 0x74, 0x5f, 0x70, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x67, 0x6d, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a,
	0x67, 0x6d, 0x74, 0x5f, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x18, 0x20, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x67, 0x6d, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x67,
	0x6d, 0x74, 0x5f, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x67, 0x6d, 0x74, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x66, 0x75, 0x6e, 0x64,
	0x5f, 0x62, 0x69, 0x6c, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x22, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x66, 0x75, 0x6e, 0x64, 0x42, 0x69, 0x6c, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x27,
	0x0a, 0x0f, 0x70, 0x61, 0x73, 0x73, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x70, 0x61, 0x72, 0x61, 0x6d,
	0x73, 0x18, 0x23, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x73, 0x73, 0x62, 0x61, 0x63,
	0x6b, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x76, 0x6f, 0x75, 0x63, 0x68,
	0x65, 0x72, 0x5f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x24,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x76, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x67, 0x72, 0x65, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x6f, 0x18, 0x25, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61,
	0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x32, 0x0a, 0x15, 0x65, 0x78,
	0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x5f, 0x61, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74,
	0x5f, 0x6e, 0x6f, 0x18, 0x26, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x41, 0x67, 0x72, 0x65, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x6f, 0x12, 0x21,
	0x0a, 0x0c, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x27,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x22, 0x0a, 0x0d, 0x62, 0x61, 0x6e, 0x6b, 0x5f, 0x61, 0x63, 0x6b,
	0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x62, 0x61, 0x6e,
	0x6b, 0x41, 0x63, 0x6b, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x2a, 0x0a, 0x0e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x22, 0xaa, 0x01, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79,
	0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x79, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x74, 0x72, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74, 0x72, 0x79, 0x55, 0x75, 0x69, 0x64, 0x12, 0x22, 0x0a,
	0x0c, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x72, 0x65, 0x63, 0x68, 0x61, 0x72, 0x67, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x22, 0x6c, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x51,
	0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x50, 0x61, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22,
	0x3f, 0x0a, 0x0d, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75,
	0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x74, 0x72, 0x79, 0x55, 0x75, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x74, 0x72, 0x79, 0x55, 0x75, 0x69, 0x64,
	0x32, 0xef, 0x01, 0x0a, 0x0a, 0x50, 0x61, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x46, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x51, 0x52, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x17, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x74, 0x1a, 0x19, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x51, 0x52, 0x43, 0x6f, 0x64, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x79, 0x12, 0x0e, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0f, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x6e, 0x0a, 0x1d, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x69, 0x70, 0x61,
	0x79, 0x43, 0x61, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x25, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x41, 0x6c, 0x69, 0x70, 0x61,
	0x79, 0x43, 0x61, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x41, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x43, 0x61, 0x73, 0x68, 0x4f, 0x75, 0x74, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x42, 0x06, 0x5a, 0x04, 0x70, 0x61, 0x79, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_pay_proto_rawDescOnce sync.Once
	file_pay_proto_rawDescData = file_pay_proto_rawDesc
)

func file_pay_proto_rawDescGZIP() []byte {
	file_pay_proto_rawDescOnce.Do(func() {
		file_pay_proto_rawDescData = protoimpl.X.CompressGZIP(file_pay_proto_rawDescData)
	})
	return file_pay_proto_rawDescData
}

var file_pay_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_pay_proto_goTypes = []interface{}{
	(*GetQRCodeTransactionStatus)(nil),            // 0: GetQRCodeTransactionStatus
	(*AlipayWithdrawalRequest)(nil),               // 1: AlipayWithdrawalRequest
	(*UserRealNameAuthenticationReqeust)(nil),     // 2: UserRealNameAuthenticationReqeust
	(*QueryAlipayCashOutApplicationRequest)(nil),  // 3: QueryAlipayCashOutApplicationRequest
	(*QueryAlipayCashOutApplicationResponse)(nil), // 4: QueryAlipayCashOutApplicationResponse
	(*AlipayCashOutApplication)(nil),              // 5: AlipayCashOutApplication
	(*AliPayCashOutApplicationReqeust)(nil),       // 6: AliPayCashOutApplicationReqeust
	(*AliCashOutReqeust)(nil),                     // 7: AliCashOutReqeust
	(*QueryWechatPaymentRecordsRequest)(nil),      // 8: QueryWechatPaymentRecordsRequest
	(*QueryAliPaymentRecordsRequest)(nil),         // 9: QueryAliPaymentRecordsRequest
	(*AliPaymentRecordsResponse)(nil),             // 10: AliPaymentRecordsResponse
	(*WechatPaymentRecordsResponse)(nil),          // 11: WechatPaymentRecordsResponse
	(*WechatPaymentRecord)(nil),                   // 12: WechatPaymentRecord
	(*AliPaymentRecord)(nil),                      // 13: AliPaymentRecord
	(*WalletBuyRequest)(nil),                      // 14: WalletBuyRequest
	(*NotifyRequest)(nil),                         // 15: NotifyRequest
	(*NotifyResponse)(nil),                        // 16: NotifyResponse
	(*GetPaymentQRCodeRequet)(nil),                // 17: GetPaymentQRCodeRequet
	(*GetPaymentQRCodeResponse)(nil),              // 18: GetPaymentQRCodeResponse
	(*PaymentQRCode)(nil),                         // 19: PaymentQRCode
}
var file_pay_proto_depIdxs = []int32{
	5,  // 0: QueryAlipayCashOutApplicationResponse.rows:type_name -> AlipayCashOutApplication
	13, // 1: AliPaymentRecordsResponse.rows:type_name -> AliPaymentRecord
	12, // 2: WechatPaymentRecordsResponse.rows:type_name -> WechatPaymentRecord
	19, // 3: GetPaymentQRCodeResponse.data:type_name -> PaymentQRCode
	17, // 4: PayService.GetPaymentQRCode:input_type -> GetPaymentQRCodeRequet
	15, // 5: PayService.Notify:input_type -> NotifyRequest
	3,  // 6: PayService.QueryAlipayCashOutApplication:input_type -> QueryAlipayCashOutApplicationRequest
	18, // 7: PayService.GetPaymentQRCode:output_type -> GetPaymentQRCodeResponse
	16, // 8: PayService.Notify:output_type -> NotifyResponse
	4,  // 9: PayService.QueryAlipayCashOutApplication:output_type -> QueryAlipayCashOutApplicationResponse
	7,  // [7:10] is the sub-list for method output_type
	4,  // [4:7] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_pay_proto_init() }
func file_pay_proto_init() {
	if File_pay_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pay_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetQRCodeTransactionStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlipayWithdrawalRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserRealNameAuthenticationReqeust); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAlipayCashOutApplicationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAlipayCashOutApplicationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlipayCashOutApplication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AliPayCashOutApplicationReqeust); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AliCashOutReqeust); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryWechatPaymentRecordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryAliPaymentRecordsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AliPaymentRecordsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatPaymentRecordsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WechatPaymentRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AliPaymentRecord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WalletBuyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotifyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentQRCodeRequet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPaymentQRCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pay_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PaymentQRCode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pay_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pay_proto_goTypes,
		DependencyIndexes: file_pay_proto_depIdxs,
		MessageInfos:      file_pay_proto_msgTypes,
	}.Build()
	File_pay_proto = out.File
	file_pay_proto_rawDesc = nil
	file_pay_proto_goTypes = nil
	file_pay_proto_depIdxs = nil
}
