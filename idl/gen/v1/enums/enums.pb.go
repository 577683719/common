// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.1
// 	protoc        v3.13.0
// source: enums.proto

package enums

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CacheAdapterEnums int32

const (
	CacheAdapterEnums_REDIS CacheAdapterEnums = 0
)

// Enum value maps for CacheAdapterEnums.
var (
	CacheAdapterEnums_name = map[int32]string{
		0: "REDIS",
	}
	CacheAdapterEnums_value = map[string]int32{
		"REDIS": 0,
	}
)

func (x CacheAdapterEnums) Enum() *CacheAdapterEnums {
	p := new(CacheAdapterEnums)
	*p = x
	return p
}

func (x CacheAdapterEnums) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CacheAdapterEnums) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[0].Descriptor()
}

func (CacheAdapterEnums) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[0]
}

func (x CacheAdapterEnums) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CacheAdapterEnums.Descriptor instead.
func (CacheAdapterEnums) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{0}
}

// MQ事件消息类型
type EventMessageType int32

const (
	// 订单添加
	EventMessageType_ORDER_ADD EventMessageType = 0
	// 延迟扣减用户金额
	EventMessageType_ORDER_EXPENSE_DEDUCTIONS EventMessageType = 1
	// 创建实例
	EventMessageType_ORDER_CREATE_INSEANCE EventMessageType = 2
	// 关闭实例
	EventMessageType_DEVICE_STOP_INSEANCE EventMessageType = 3
	// 开机
	EventMessageType_DEVICE_START_INSEANCE EventMessageType = 4
	// 实例释放
	EventMessageType_DEVICE_RELEASE_INSEANCE EventMessageType = 5
	// 雨点赠送
	EventMessageType_ACCOUNT_GRANT_INTEGRAL EventMessageType = 20
)

// Enum value maps for EventMessageType.
var (
	EventMessageType_name = map[int32]string{
		0:  "ORDER_ADD",
		1:  "ORDER_EXPENSE_DEDUCTIONS",
		2:  "ORDER_CREATE_INSEANCE",
		3:  "DEVICE_STOP_INSEANCE",
		4:  "DEVICE_START_INSEANCE",
		5:  "DEVICE_RELEASE_INSEANCE",
		20: "ACCOUNT_GRANT_INTEGRAL",
	}
	EventMessageType_value = map[string]int32{
		"ORDER_ADD":                0,
		"ORDER_EXPENSE_DEDUCTIONS": 1,
		"ORDER_CREATE_INSEANCE":    2,
		"DEVICE_STOP_INSEANCE":     3,
		"DEVICE_START_INSEANCE":    4,
		"DEVICE_RELEASE_INSEANCE":  5,
		"ACCOUNT_GRANT_INTEGRAL":   20,
	}
)

func (x EventMessageType) Enum() *EventMessageType {
	p := new(EventMessageType)
	*p = x
	return p
}

func (x EventMessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventMessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[1].Descriptor()
}

func (EventMessageType) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[1]
}

func (x EventMessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventMessageType.Descriptor instead.
func (EventMessageType) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{1}
}

// 订单支付状态
type OrderPyStateEnums int32

const (
	// 未支付订单
	OrderPyStateEnums_NEW OrderPyStateEnums = 0
	// 已经支付订单
	OrderPyStateEnums_PAY OrderPyStateEnums = 1
	// 超时取消订单
	OrderPyStateEnums_CANCEL OrderPyStateEnums = 2
	// 创建失败
	OrderPyStateEnums_FAIL OrderPyStateEnums = 3
)

// Enum value maps for OrderPyStateEnums.
var (
	OrderPyStateEnums_name = map[int32]string{
		0: "NEW",
		1: "PAY",
		2: "CANCEL",
		3: "FAIL",
	}
	OrderPyStateEnums_value = map[string]int32{
		"NEW":    0,
		"PAY":    1,
		"CANCEL": 2,
		"FAIL":   3,
	}
)

func (x OrderPyStateEnums) Enum() *OrderPyStateEnums {
	p := new(OrderPyStateEnums)
	*p = x
	return p
}

func (x OrderPyStateEnums) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderPyStateEnums) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[2].Descriptor()
}

func (OrderPyStateEnums) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[2]
}

func (x OrderPyStateEnums) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderPyStateEnums.Descriptor instead.
func (OrderPyStateEnums) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{2}
}

type InstanceStatusEnums int32

const (
	// 开机
	InstanceStatusEnums_On InstanceStatusEnums = 0
	// 关机
	InstanceStatusEnums_Off InstanceStatusEnums = 1
	// 失败
	InstanceStatusEnums_Fail InstanceStatusEnums = 2
	// 初始化
	InstanceStatusEnums_Invalid InstanceStatusEnums = 3
	// 异常
	InstanceStatusEnums_Exception InstanceStatusEnums = 4
	// 重新创建
	InstanceStatusEnums_ReCreate InstanceStatusEnums = 5
)

// Enum value maps for InstanceStatusEnums.
var (
	InstanceStatusEnums_name = map[int32]string{
		0: "On",
		1: "Off",
		2: "Fail",
		3: "Invalid",
		4: "Exception",
		5: "ReCreate",
	}
	InstanceStatusEnums_value = map[string]int32{
		"On":        0,
		"Off":       1,
		"Fail":      2,
		"Invalid":   3,
		"Exception": 4,
		"ReCreate":  5,
	}
)

func (x InstanceStatusEnums) Enum() *InstanceStatusEnums {
	p := new(InstanceStatusEnums)
	*p = x
	return p
}

func (x InstanceStatusEnums) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstanceStatusEnums) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[3].Descriptor()
}

func (InstanceStatusEnums) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[3]
}

func (x InstanceStatusEnums) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstanceStatusEnums.Descriptor instead.
func (InstanceStatusEnums) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{3}
}

// 计费类型
type BillingTypeEnums int32

const (
	// 按量
	BillingTypeEnums_AMOUNT BillingTypeEnums = 0
	// 按日
	BillingTypeEnums_DAY BillingTypeEnums = 1
	// 按月
	BillingTypeEnums_MONTH BillingTypeEnums = 2
	// 周
	BillingTypeEnums_WEEK BillingTypeEnums = 3
	// 年
	BillingTypeEnums_YEAR BillingTypeEnums = 4
	// 续费
	BillingTypeEnums_RENEW BillingTypeEnums = 5
)

// Enum value maps for BillingTypeEnums.
var (
	BillingTypeEnums_name = map[int32]string{
		0: "AMOUNT",
		1: "DAY",
		2: "MONTH",
		3: "WEEK",
		4: "YEAR",
		5: "RENEW",
	}
	BillingTypeEnums_value = map[string]int32{
		"AMOUNT": 0,
		"DAY":    1,
		"MONTH":  2,
		"WEEK":   3,
		"YEAR":   4,
		"RENEW":  5,
	}
)

func (x BillingTypeEnums) Enum() *BillingTypeEnums {
	p := new(BillingTypeEnums)
	*p = x
	return p
}

func (x BillingTypeEnums) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (BillingTypeEnums) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[4].Descriptor()
}

func (BillingTypeEnums) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[4]
}

func (x BillingTypeEnums) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use BillingTypeEnums.Descriptor instead.
func (BillingTypeEnums) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{4}
}

// 发票类型
type InvoiceType int32

const (
	// 增值税普通发票
	InvoiceType_VAT_PLAIN_INVOICE InvoiceType = 0
	// 增值税专用发票
	InvoiceType_VAT_SPECIAL_INVOICE InvoiceType = 1
)

// Enum value maps for InvoiceType.
var (
	InvoiceType_name = map[int32]string{
		0: "VAT_PLAIN_INVOICE",
		1: "VAT_SPECIAL_INVOICE",
	}
	InvoiceType_value = map[string]int32{
		"VAT_PLAIN_INVOICE":   0,
		"VAT_SPECIAL_INVOICE": 1,
	}
)

func (x InvoiceType) Enum() *InvoiceType {
	p := new(InvoiceType)
	*p = x
	return p
}

func (x InvoiceType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InvoiceType) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[5].Descriptor()
}

func (InvoiceType) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[5]
}

func (x InvoiceType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InvoiceType.Descriptor instead.
func (InvoiceType) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{5}
}

// 代金券发布状态
type VoucherPublishState int32

const (
	// 发布
	VoucherPublishState_PUBLISH VoucherPublishState = 0
	// 草稿
	VoucherPublishState_DRAFT VoucherPublishState = 1
	// 下线
	VoucherPublishState_OFFLINE VoucherPublishState = 2
)

// Enum value maps for VoucherPublishState.
var (
	VoucherPublishState_name = map[int32]string{
		0: "PUBLISH",
		1: "DRAFT",
		2: "OFFLINE",
	}
	VoucherPublishState_value = map[string]int32{
		"PUBLISH": 0,
		"DRAFT":   1,
		"OFFLINE": 2,
	}
)

func (x VoucherPublishState) Enum() *VoucherPublishState {
	p := new(VoucherPublishState)
	*p = x
	return p
}

func (x VoucherPublishState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoucherPublishState) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[6].Descriptor()
}

func (VoucherPublishState) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[6]
}

func (x VoucherPublishState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoucherPublishState.Descriptor instead.
func (VoucherPublishState) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{6}
}

// 结算状态
type SettlementApplication_SettlementStatus int32

const (
	// 待处理
	SettlementApplication_PENDING SettlementApplication_SettlementStatus = 0
	// 已结算
	SettlementApplication_SETTLED SettlementApplication_SettlementStatus = 1
	// 拒绝
	SettlementApplication_REJECTED SettlementApplication_SettlementStatus = 2
)

// Enum value maps for SettlementApplication_SettlementStatus.
var (
	SettlementApplication_SettlementStatus_name = map[int32]string{
		0: "PENDING",
		1: "SETTLED",
		2: "REJECTED",
	}
	SettlementApplication_SettlementStatus_value = map[string]int32{
		"PENDING":  0,
		"SETTLED":  1,
		"REJECTED": 2,
	}
)

func (x SettlementApplication_SettlementStatus) Enum() *SettlementApplication_SettlementStatus {
	p := new(SettlementApplication_SettlementStatus)
	*p = x
	return p
}

func (x SettlementApplication_SettlementStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SettlementApplication_SettlementStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[7].Descriptor()
}

func (SettlementApplication_SettlementStatus) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[7]
}

func (x SettlementApplication_SettlementStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SettlementApplication_SettlementStatus.Descriptor instead.
func (SettlementApplication_SettlementStatus) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{0, 0}
}

// 转账状态
type TransferStatus_TransferStatus int32

const (
	// 未转账
	TransferStatus_PENDING TransferStatus_TransferStatus = 0
	// 已转账
	TransferStatus_SUCCESS TransferStatus_TransferStatus = 1
	// 转账失败
	TransferStatus_FAIL TransferStatus_TransferStatus = 2
)

// Enum value maps for TransferStatus_TransferStatus.
var (
	TransferStatus_TransferStatus_name = map[int32]string{
		0: "PENDING",
		1: "SUCCESS",
		2: "FAIL",
	}
	TransferStatus_TransferStatus_value = map[string]int32{
		"PENDING": 0,
		"SUCCESS": 1,
		"FAIL":    2,
	}
)

func (x TransferStatus_TransferStatus) Enum() *TransferStatus_TransferStatus {
	p := new(TransferStatus_TransferStatus)
	*p = x
	return p
}

func (x TransferStatus_TransferStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransferStatus_TransferStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[8].Descriptor()
}

func (TransferStatus_TransferStatus) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[8]
}

func (x TransferStatus_TransferStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransferStatus_TransferStatus.Descriptor instead.
func (TransferStatus_TransferStatus) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{1, 0}
}

// 审批状态枚举
type ApprovalStatus_ApprovalStatus int32

const (
	// 待审批
	ApprovalStatus_PENDING ApprovalStatus_ApprovalStatus = 0
	// 已批准
	ApprovalStatus_APPROVED ApprovalStatus_ApprovalStatus = 1
	// 已拒绝
	ApprovalStatus_REJECTED ApprovalStatus_ApprovalStatus = 2
	// 审核中
	ApprovalStatus_IN_REVIEW ApprovalStatus_ApprovalStatus = 3
	// 已完成
	ApprovalStatus_COMPLETED ApprovalStatus_ApprovalStatus = 4
	// 正在审查
	ApprovalStatus_UNDER_REVIEW ApprovalStatus_ApprovalStatus = 5
	// 已取消
	ApprovalStatus_CANCELLED ApprovalStatus_ApprovalStatus = 6
)

// Enum value maps for ApprovalStatus_ApprovalStatus.
var (
	ApprovalStatus_ApprovalStatus_name = map[int32]string{
		0: "PENDING",
		1: "APPROVED",
		2: "REJECTED",
		3: "IN_REVIEW",
		4: "COMPLETED",
		5: "UNDER_REVIEW",
		6: "CANCELLED",
	}
	ApprovalStatus_ApprovalStatus_value = map[string]int32{
		"PENDING":      0,
		"APPROVED":     1,
		"REJECTED":     2,
		"IN_REVIEW":    3,
		"COMPLETED":    4,
		"UNDER_REVIEW": 5,
		"CANCELLED":    6,
	}
)

func (x ApprovalStatus_ApprovalStatus) Enum() *ApprovalStatus_ApprovalStatus {
	p := new(ApprovalStatus_ApprovalStatus)
	*p = x
	return p
}

func (x ApprovalStatus_ApprovalStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApprovalStatus_ApprovalStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[9].Descriptor()
}

func (ApprovalStatus_ApprovalStatus) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[9]
}

func (x ApprovalStatus_ApprovalStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApprovalStatus_ApprovalStatus.Descriptor instead.
func (ApprovalStatus_ApprovalStatus) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{2, 0}
}

type RechargeType_RechargeTypeEnum int32

const (
	// 雨点充值
	RechargeType_INTEGRAL RechargeType_RechargeTypeEnum = 0
	// 余额充值
	RechargeType_WALLET RechargeType_RechargeTypeEnum = 1
)

// Enum value maps for RechargeType_RechargeTypeEnum.
var (
	RechargeType_RechargeTypeEnum_name = map[int32]string{
		0: "INTEGRAL",
		1: "WALLET",
	}
	RechargeType_RechargeTypeEnum_value = map[string]int32{
		"INTEGRAL": 0,
		"WALLET":   1,
	}
)

func (x RechargeType_RechargeTypeEnum) Enum() *RechargeType_RechargeTypeEnum {
	p := new(RechargeType_RechargeTypeEnum)
	*p = x
	return p
}

func (x RechargeType_RechargeTypeEnum) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RechargeType_RechargeTypeEnum) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[10].Descriptor()
}

func (RechargeType_RechargeTypeEnum) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[10]
}

func (x RechargeType_RechargeTypeEnum) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RechargeType_RechargeTypeEnum.Descriptor instead.
func (RechargeType_RechargeTypeEnum) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{3, 0}
}

type MessageType_MessageType int32

const (
	// 普通文本消息
	MessageType_TEXT MessageType_MessageType = 0
	// 图片消息
	MessageType_IMAGE MessageType_MessageType = 1
	// 文件消息
	MessageType_FILE MessageType_MessageType = 2
	// 实例消息
	MessageType_INSTANCE MessageType_MessageType = 3
)

// Enum value maps for MessageType_MessageType.
var (
	MessageType_MessageType_name = map[int32]string{
		0: "TEXT",
		1: "IMAGE",
		2: "FILE",
		3: "INSTANCE",
	}
	MessageType_MessageType_value = map[string]int32{
		"TEXT":     0,
		"IMAGE":    1,
		"FILE":     2,
		"INSTANCE": 3,
	}
)

func (x MessageType_MessageType) Enum() *MessageType_MessageType {
	p := new(MessageType_MessageType)
	*p = x
	return p
}

func (x MessageType_MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType_MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[11].Descriptor()
}

func (MessageType_MessageType) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[11]
}

func (x MessageType_MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType_MessageType.Descriptor instead.
func (MessageType_MessageType) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{4, 0}
}

// //交易渠道
type TransactionChannel_TransactionChannel int32

const (
	// 雨点
	TransactionChannel_INTEGRAL TransactionChannel_TransactionChannel = 0
	// 支付宝
	TransactionChannel_ALI TransactionChannel_TransactionChannel = 1
	// 微信
	TransactionChannel_WECHAT TransactionChannel_TransactionChannel = 2
	// 钱包
	TransactionChannel_WALLET TransactionChannel_TransactionChannel = 3
)

// Enum value maps for TransactionChannel_TransactionChannel.
var (
	TransactionChannel_TransactionChannel_name = map[int32]string{
		0: "INTEGRAL",
		1: "ALI",
		2: "WECHAT",
		3: "WALLET",
	}
	TransactionChannel_TransactionChannel_value = map[string]int32{
		"INTEGRAL": 0,
		"ALI":      1,
		"WECHAT":   2,
		"WALLET":   3,
	}
)

func (x TransactionChannel_TransactionChannel) Enum() *TransactionChannel_TransactionChannel {
	p := new(TransactionChannel_TransactionChannel)
	*p = x
	return p
}

func (x TransactionChannel_TransactionChannel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionChannel_TransactionChannel) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[12].Descriptor()
}

func (TransactionChannel_TransactionChannel) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[12]
}

func (x TransactionChannel_TransactionChannel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionChannel_TransactionChannel.Descriptor instead.
func (TransactionChannel_TransactionChannel) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{5, 0}
}

// //交易类型
type TransactionType_TransactionType int32

const (
	// 消费
	TransactionType_CONSUMPTION TransactionType_TransactionType = 0
	// 充值
	TransactionType_RECHARGE TransactionType_TransactionType = 1
)

// Enum value maps for TransactionType_TransactionType.
var (
	TransactionType_TransactionType_name = map[int32]string{
		0: "CONSUMPTION",
		1: "RECHARGE",
	}
	TransactionType_TransactionType_value = map[string]int32{
		"CONSUMPTION": 0,
		"RECHARGE":    1,
	}
)

func (x TransactionType_TransactionType) Enum() *TransactionType_TransactionType {
	p := new(TransactionType_TransactionType)
	*p = x
	return p
}

func (x TransactionType_TransactionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionType_TransactionType) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[13].Descriptor()
}

func (TransactionType_TransactionType) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[13]
}

func (x TransactionType_TransactionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransactionType_TransactionType.Descriptor instead.
func (TransactionType_TransactionType) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{6, 0}
}

// 收支类型
type IncomeExpenseType_IncomeExpenseType int32

const (
	// 支出
	IncomeExpenseType_EXPENDITURE IncomeExpenseType_IncomeExpenseType = 0
	// 收入
	IncomeExpenseType_INCOME IncomeExpenseType_IncomeExpenseType = 1
)

// Enum value maps for IncomeExpenseType_IncomeExpenseType.
var (
	IncomeExpenseType_IncomeExpenseType_name = map[int32]string{
		0: "EXPENDITURE",
		1: "INCOME",
	}
	IncomeExpenseType_IncomeExpenseType_value = map[string]int32{
		"EXPENDITURE": 0,
		"INCOME":      1,
	}
)

func (x IncomeExpenseType_IncomeExpenseType) Enum() *IncomeExpenseType_IncomeExpenseType {
	p := new(IncomeExpenseType_IncomeExpenseType)
	*p = x
	return p
}

func (x IncomeExpenseType_IncomeExpenseType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (IncomeExpenseType_IncomeExpenseType) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[14].Descriptor()
}

func (IncomeExpenseType_IncomeExpenseType) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[14]
}

func (x IncomeExpenseType_IncomeExpenseType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use IncomeExpenseType_IncomeExpenseType.Descriptor instead.
func (IncomeExpenseType_IncomeExpenseType) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{7, 0}
}

// 订单状态
type OrderState_OrderState int32

const (
	// 已支付
	OrderState_NEW OrderState_OrderState = 0
	// 完成
	OrderState_COMPLETE OrderState_OrderState = 1
	// 取消
	OrderState_CANCELLED OrderState_OrderState = 2
	// 失败
	OrderState_FAIL OrderState_OrderState = 4
)

// Enum value maps for OrderState_OrderState.
var (
	OrderState_OrderState_name = map[int32]string{
		0: "NEW",
		1: "COMPLETE",
		2: "CANCELLED",
		4: "FAIL",
	}
	OrderState_OrderState_value = map[string]int32{
		"NEW":       0,
		"COMPLETE":  1,
		"CANCELLED": 2,
		"FAIL":      4,
	}
)

func (x OrderState_OrderState) Enum() *OrderState_OrderState {
	p := new(OrderState_OrderState)
	*p = x
	return p
}

func (x OrderState_OrderState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderState_OrderState) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[15].Descriptor()
}

func (OrderState_OrderState) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[15]
}

func (x OrderState_OrderState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderState_OrderState.Descriptor instead.
func (OrderState_OrderState) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{8, 0}
}

// 订单支付状态
type PayState_PayState int32

const (
	// 已支付
	PayState_PAY PayState_PayState = 0
	// 失败
	PayState_FAILED PayState_PayState = 1
	// 已退款
	PayState_REFUNDED PayState_PayState = 2
	// 已取消
	PayState_CANCELLED PayState_PayState = 3
	// 处理中
	PayState_PROCESSING PayState_PayState = 4
	// 未支付订单
	PayState_NEW PayState_PayState = 5
	// 已经支付订单
	// 超时取消订单
	PayState_CANCEL PayState_PayState = 6
	// 创建失败
	PayState_FAIL PayState_PayState = 7
)

// Enum value maps for PayState_PayState.
var (
	PayState_PayState_name = map[int32]string{
		0: "PAY",
		1: "FAILED",
		2: "REFUNDED",
		3: "CANCELLED",
		4: "PROCESSING",
		5: "NEW",
		6: "CANCEL",
		7: "FAIL",
	}
	PayState_PayState_value = map[string]int32{
		"PAY":        0,
		"FAILED":     1,
		"REFUNDED":   2,
		"CANCELLED":  3,
		"PROCESSING": 4,
		"NEW":        5,
		"CANCEL":     6,
		"FAIL":       7,
	}
)

func (x PayState_PayState) Enum() *PayState_PayState {
	p := new(PayState_PayState)
	*p = x
	return p
}

func (x PayState_PayState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayState_PayState) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[16].Descriptor()
}

func (PayState_PayState) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[16]
}

func (x PayState_PayState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayState_PayState.Descriptor instead.
func (PayState_PayState) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{9, 0}
}

// 计费类型
type OrderType_OrderTypeEnums int32

const (
	// 按量
	OrderType_AMOUNT OrderType_OrderTypeEnums = 0
	// 按日
	OrderType_DAY OrderType_OrderTypeEnums = 1
	// 按月
	OrderType_MONTH OrderType_OrderTypeEnums = 2
	// 周
	OrderType_WEEK OrderType_OrderTypeEnums = 3
	// 年
	OrderType_YEAR OrderType_OrderTypeEnums = 4
	// 续费
	OrderType_RENEW OrderType_OrderTypeEnums = 5
)

// Enum value maps for OrderType_OrderTypeEnums.
var (
	OrderType_OrderTypeEnums_name = map[int32]string{
		0: "AMOUNT",
		1: "DAY",
		2: "MONTH",
		3: "WEEK",
		4: "YEAR",
		5: "RENEW",
	}
	OrderType_OrderTypeEnums_value = map[string]int32{
		"AMOUNT": 0,
		"DAY":    1,
		"MONTH":  2,
		"WEEK":   3,
		"YEAR":   4,
		"RENEW":  5,
	}
)

func (x OrderType_OrderTypeEnums) Enum() *OrderType_OrderTypeEnums {
	p := new(OrderType_OrderTypeEnums)
	*p = x
	return p
}

func (x OrderType_OrderTypeEnums) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderType_OrderTypeEnums) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[17].Descriptor()
}

func (OrderType_OrderTypeEnums) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[17]
}

func (x OrderType_OrderTypeEnums) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderType_OrderTypeEnums.Descriptor instead.
func (OrderType_OrderTypeEnums) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{10, 0}
}

// 优惠卷与代金券使用状态
type VoucherState_UseStateEnums int32

const (
	// 领取状态
	VoucherState_NEW VoucherState_UseStateEnums = 0
	// 使用状态
	VoucherState_USED VoucherState_UseStateEnums = 1
	// 过期状态
	VoucherState_EXPIRED VoucherState_UseStateEnums = 2
)

// Enum value maps for VoucherState_UseStateEnums.
var (
	VoucherState_UseStateEnums_name = map[int32]string{
		0: "NEW",
		1: "USED",
		2: "EXPIRED",
	}
	VoucherState_UseStateEnums_value = map[string]int32{
		"NEW":     0,
		"USED":    1,
		"EXPIRED": 2,
	}
)

func (x VoucherState_UseStateEnums) Enum() *VoucherState_UseStateEnums {
	p := new(VoucherState_UseStateEnums)
	*p = x
	return p
}

func (x VoucherState_UseStateEnums) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoucherState_UseStateEnums) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[18].Descriptor()
}

func (VoucherState_UseStateEnums) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[18]
}

func (x VoucherState_UseStateEnums) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoucherState_UseStateEnums.Descriptor instead.
func (VoucherState_UseStateEnums) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{11, 0}
}

// 代金券类型[NEW_USER注册赠券，TASK任务卷，PROMOTION促销劵]
type VoucherState_CategoryEnums int32

const (
	// NEW_USER注册赠券
	VoucherState_NEW_USER VoucherState_CategoryEnums = 0
	// 任务卷
	VoucherState_TASK VoucherState_CategoryEnums = 1
	// 促销劵
	VoucherState_PROMOTION VoucherState_CategoryEnums = 2
)

// Enum value maps for VoucherState_CategoryEnums.
var (
	VoucherState_CategoryEnums_name = map[int32]string{
		0: "NEW_USER",
		1: "TASK",
		2: "PROMOTION",
	}
	VoucherState_CategoryEnums_value = map[string]int32{
		"NEW_USER":  0,
		"TASK":      1,
		"PROMOTION": 2,
	}
)

func (x VoucherState_CategoryEnums) Enum() *VoucherState_CategoryEnums {
	p := new(VoucherState_CategoryEnums)
	*p = x
	return p
}

func (x VoucherState_CategoryEnums) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoucherState_CategoryEnums) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[19].Descriptor()
}

func (VoucherState_CategoryEnums) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[19]
}

func (x VoucherState_CategoryEnums) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoucherState_CategoryEnums.Descriptor instead.
func (VoucherState_CategoryEnums) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{11, 1}
}

type SmsType_SmsTypeEnums int32

const (
	SmsType_TencentSms SmsType_SmsTypeEnums = 0
)

// Enum value maps for SmsType_SmsTypeEnums.
var (
	SmsType_SmsTypeEnums_name = map[int32]string{
		0: "TencentSms",
	}
	SmsType_SmsTypeEnums_value = map[string]int32{
		"TencentSms": 0,
	}
)

func (x SmsType_SmsTypeEnums) Enum() *SmsType_SmsTypeEnums {
	p := new(SmsType_SmsTypeEnums)
	*p = x
	return p
}

func (x SmsType_SmsTypeEnums) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SmsType_SmsTypeEnums) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[20].Descriptor()
}

func (SmsType_SmsTypeEnums) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[20]
}

func (x SmsType_SmsTypeEnums) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SmsType_SmsTypeEnums.Descriptor instead.
func (SmsType_SmsTypeEnums) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{12, 0}
}

type PayStrategy_PayType int32

const (
	// 支付宝
	PayStrategy_ALI PayStrategy_PayType = 0
	// 微信
	PayStrategy_WECHAT PayStrategy_PayType = 1
	// 雨点
	PayStrategy_INTEGRAL PayStrategy_PayType = 3
)

// Enum value maps for PayStrategy_PayType.
var (
	PayStrategy_PayType_name = map[int32]string{
		0: "ALI",
		1: "WECHAT",
		3: "INTEGRAL",
	}
	PayStrategy_PayType_value = map[string]int32{
		"ALI":      0,
		"WECHAT":   1,
		"INTEGRAL": 3,
	}
)

func (x PayStrategy_PayType) Enum() *PayStrategy_PayType {
	p := new(PayStrategy_PayType)
	*p = x
	return p
}

func (x PayStrategy_PayType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PayStrategy_PayType) Descriptor() protoreflect.EnumDescriptor {
	return file_enums_proto_enumTypes[21].Descriptor()
}

func (PayStrategy_PayType) Type() protoreflect.EnumType {
	return &file_enums_proto_enumTypes[21]
}

func (x PayStrategy_PayType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PayStrategy_PayType.Descriptor instead.
func (PayStrategy_PayType) EnumDescriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{13, 0}
}

type SettlementApplication struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SettlementApplication) Reset() {
	*x = SettlementApplication{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SettlementApplication) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SettlementApplication) ProtoMessage() {}

func (x *SettlementApplication) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SettlementApplication.ProtoReflect.Descriptor instead.
func (*SettlementApplication) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{0}
}

// 转账状态
type TransferStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TransferStatus) Reset() {
	*x = TransferStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferStatus) ProtoMessage() {}

func (x *TransferStatus) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferStatus.ProtoReflect.Descriptor instead.
func (*TransferStatus) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{1}
}

// 审批状态
type ApprovalStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ApprovalStatus) Reset() {
	*x = ApprovalStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApprovalStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApprovalStatus) ProtoMessage() {}

func (x *ApprovalStatus) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApprovalStatus.ProtoReflect.Descriptor instead.
func (*ApprovalStatus) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{2}
}

// 充值类型
type RechargeType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RechargeType) Reset() {
	*x = RechargeType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RechargeType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RechargeType) ProtoMessage() {}

func (x *RechargeType) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RechargeType.ProtoReflect.Descriptor instead.
func (*RechargeType) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{3}
}

type MessageType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *MessageType) Reset() {
	*x = MessageType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MessageType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageType) ProtoMessage() {}

func (x *MessageType) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageType.ProtoReflect.Descriptor instead.
func (*MessageType) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{4}
}

// 交易渠道
type TransactionChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TransactionChannel) Reset() {
	*x = TransactionChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionChannel) ProtoMessage() {}

func (x *TransactionChannel) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionChannel.ProtoReflect.Descriptor instead.
func (*TransactionChannel) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{5}
}

// 交易类型
type TransactionType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TransactionType) Reset() {
	*x = TransactionType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionType) ProtoMessage() {}

func (x *TransactionType) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionType.ProtoReflect.Descriptor instead.
func (*TransactionType) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{6}
}

// 收支类型
type IncomeExpenseType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *IncomeExpenseType) Reset() {
	*x = IncomeExpenseType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IncomeExpenseType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IncomeExpenseType) ProtoMessage() {}

func (x *IncomeExpenseType) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IncomeExpenseType.ProtoReflect.Descriptor instead.
func (*IncomeExpenseType) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{7}
}

// 订单枚举
type OrderState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OrderState) Reset() {
	*x = OrderState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderState) ProtoMessage() {}

func (x *OrderState) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderState.ProtoReflect.Descriptor instead.
func (*OrderState) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{8}
}

// 支付枚举
type PayState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PayState) Reset() {
	*x = PayState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayState) ProtoMessage() {}

func (x *PayState) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayState.ProtoReflect.Descriptor instead.
func (*PayState) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{9}
}

type OrderType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *OrderType) Reset() {
	*x = OrderType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OrderType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OrderType) ProtoMessage() {}

func (x *OrderType) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OrderType.ProtoReflect.Descriptor instead.
func (*OrderType) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{10}
}

// 可用 NEW,已使用USED,过期 EXPIRED;
type VoucherState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *VoucherState) Reset() {
	*x = VoucherState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoucherState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoucherState) ProtoMessage() {}

func (x *VoucherState) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoucherState.ProtoReflect.Descriptor instead.
func (*VoucherState) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{11}
}

type SmsType struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SmsType) Reset() {
	*x = SmsType{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SmsType) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SmsType) ProtoMessage() {}

func (x *SmsType) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SmsType.ProtoReflect.Descriptor instead.
func (*SmsType) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{12}
}

// 支付策略
type PayStrategy struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PayStrategy) Reset() {
	*x = PayStrategy{}
	if protoimpl.UnsafeEnabled {
		mi := &file_enums_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PayStrategy) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PayStrategy) ProtoMessage() {}

func (x *PayStrategy) ProtoReflect() protoreflect.Message {
	mi := &file_enums_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PayStrategy.ProtoReflect.Descriptor instead.
func (*PayStrategy) Descriptor() ([]byte, []int) {
	return file_enums_proto_rawDescGZIP(), []int{13}
}

var File_enums_proto protoreflect.FileDescriptor

var file_enums_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x53, 0x0a,
	0x15, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x3a, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x74, 0x6c, 0x65,
	0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45,
	0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x54, 0x54, 0x4c,
	0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x4a, 0x45, 0x43, 0x54, 0x45, 0x44,
	0x10, 0x02, 0x22, 0x46, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x34, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e,
	0x47, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x55, 0x43, 0x43, 0x45, 0x53, 0x53, 0x10, 0x01,
	0x12, 0x08, 0x0a, 0x04, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x02, 0x22, 0x8a, 0x01, 0x0a, 0x0e, 0x41,
	0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x78, 0x0a,
	0x0e, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x61, 0x6c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x0b, 0x0a, 0x07, 0x50, 0x45, 0x4e, 0x44, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x41, 0x50, 0x50, 0x52, 0x4f, 0x56, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45,
	0x4a, 0x45, 0x43, 0x54, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x49, 0x4e, 0x5f, 0x52,
	0x45, 0x56, 0x49, 0x45, 0x57, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x4f, 0x4d, 0x50, 0x4c,
	0x45, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x10, 0x0a, 0x0c, 0x55, 0x4e, 0x44, 0x45, 0x52, 0x5f,
	0x52, 0x45, 0x56, 0x49, 0x45, 0x57, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43,
	0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x22, 0x3c, 0x0a, 0x0c, 0x52, 0x65, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x2c, 0x0a, 0x10, 0x52, 0x65, 0x63, 0x68, 0x61,
	0x72, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x12, 0x0c, 0x0a, 0x08, 0x49,
	0x4e, 0x54, 0x45, 0x47, 0x52, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x41, 0x4c,
	0x4c, 0x45, 0x54, 0x10, 0x01, 0x22, 0x49, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x22, 0x3a, 0x0a, 0x0b, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x45, 0x58, 0x54, 0x10, 0x00, 0x12, 0x09, 0x0a,
	0x05, 0x49, 0x4d, 0x41, 0x47, 0x45, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x49, 0x4c, 0x45,
	0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x03,
	0x22, 0x59, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x22, 0x43, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x0c, 0x0a, 0x08,
	0x49, 0x4e, 0x54, 0x45, 0x47, 0x52, 0x41, 0x4c, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c,
	0x49, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x45, 0x43, 0x48, 0x41, 0x54, 0x10, 0x02, 0x12,
	0x0a, 0x0a, 0x06, 0x57, 0x41, 0x4c, 0x4c, 0x45, 0x54, 0x10, 0x03, 0x22, 0x43, 0x0a, 0x0f, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x22, 0x30,
	0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x4e, 0x53, 0x55, 0x4d, 0x50, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x43, 0x48, 0x41, 0x52, 0x47, 0x45, 0x10, 0x01,
	0x22, 0x45, 0x0a, 0x11, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x73,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x22, 0x30, 0x0a, 0x11, 0x49, 0x6e, 0x63, 0x6f, 0x6d, 0x65, 0x45,
	0x78, 0x70, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x45, 0x58,
	0x50, 0x45, 0x4e, 0x44, 0x49, 0x54, 0x55, 0x52, 0x45, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x49,
	0x4e, 0x43, 0x4f, 0x4d, 0x45, 0x10, 0x01, 0x22, 0x4a, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72,
	0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x3c, 0x0a, 0x0a, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x4e, 0x45, 0x57, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08,
	0x43, 0x4f, 0x4d, 0x50, 0x4c, 0x45, 0x54, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x41,
	0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x41, 0x49,
	0x4c, 0x10, 0x04, 0x22, 0x77, 0x0a, 0x08, 0x50, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22,
	0x6b, 0x0a, 0x08, 0x50, 0x61, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x50,
	0x41, 0x59, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x0c, 0x0a, 0x08, 0x52, 0x45, 0x46, 0x55, 0x4e, 0x44, 0x45, 0x44, 0x10, 0x02, 0x12, 0x0d,
	0x0a, 0x09, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x4c, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0e, 0x0a,
	0x0a, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x10, 0x04, 0x12, 0x07, 0x0a,
	0x03, 0x4e, 0x45, 0x57, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c,
	0x10, 0x06, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x41, 0x49, 0x4c, 0x10, 0x07, 0x22, 0x5c, 0x0a, 0x09,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0x4f, 0x0a, 0x0e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x41,
	0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x44, 0x41, 0x59, 0x10, 0x01,
	0x12, 0x09, 0x0a, 0x05, 0x4d, 0x4f, 0x4e, 0x54, 0x48, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x57,
	0x45, 0x45, 0x4b, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x59, 0x45, 0x41, 0x52, 0x10, 0x04, 0x12,
	0x09, 0x0a, 0x05, 0x52, 0x45, 0x4e, 0x45, 0x57, 0x10, 0x05, 0x22, 0x77, 0x0a, 0x0c, 0x56, 0x6f,
	0x75, 0x63, 0x68, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x2f, 0x0a, 0x0d, 0x55, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x4e,
	0x45, 0x57, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x55, 0x53, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b,
	0x0a, 0x07, 0x45, 0x58, 0x50, 0x49, 0x52, 0x45, 0x44, 0x10, 0x02, 0x22, 0x36, 0x0a, 0x0d, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x12, 0x0c, 0x0a, 0x08,
	0x4e, 0x45, 0x57, 0x5f, 0x55, 0x53, 0x45, 0x52, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x54, 0x41,
	0x53, 0x4b, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x52, 0x4f, 0x4d, 0x4f, 0x54, 0x49, 0x4f,
	0x4e, 0x10, 0x02, 0x22, 0x29, 0x0a, 0x07, 0x53, 0x6d, 0x73, 0x54, 0x79, 0x70, 0x65, 0x22, 0x1e,
	0x0a, 0x0c, 0x53, 0x6d, 0x73, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x12, 0x0e,
	0x0a, 0x0a, 0x54, 0x65, 0x6e, 0x63, 0x65, 0x6e, 0x74, 0x53, 0x6d, 0x73, 0x10, 0x00, 0x22, 0x3b,
	0x0a, 0x0b, 0x50, 0x61, 0x79, 0x53, 0x74, 0x72, 0x61, 0x74, 0x65, 0x67, 0x79, 0x22, 0x2c, 0x0a,
	0x07, 0x50, 0x61, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x4c, 0x49, 0x10,
	0x00, 0x12, 0x0a, 0x0a, 0x06, 0x57, 0x45, 0x43, 0x48, 0x41, 0x54, 0x10, 0x01, 0x12, 0x0c, 0x0a,
	0x08, 0x49, 0x4e, 0x54, 0x45, 0x47, 0x52, 0x41, 0x4c, 0x10, 0x03, 0x2a, 0x1e, 0x0a, 0x11, 0x43,
	0x61, 0x63, 0x68, 0x65, 0x41, 0x64, 0x61, 0x70, 0x74, 0x65, 0x72, 0x45, 0x6e, 0x75, 0x6d, 0x73,
	0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x44, 0x49, 0x53, 0x10, 0x00, 0x2a, 0xc8, 0x01, 0x0a, 0x10,
	0x45, 0x76, 0x65, 0x6e, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x0d, 0x0a, 0x09, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x41, 0x44, 0x44, 0x10, 0x00, 0x12,
	0x1c, 0x0a, 0x18, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x45, 0x58, 0x50, 0x45, 0x4e, 0x53, 0x45,
	0x5f, 0x44, 0x45, 0x44, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x53, 0x10, 0x01, 0x12, 0x19, 0x0a,
	0x15, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x43, 0x52, 0x45, 0x41, 0x54, 0x45, 0x5f, 0x49, 0x4e,
	0x53, 0x45, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x45, 0x56, 0x49,
	0x43, 0x45, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x5f, 0x49, 0x4e, 0x53, 0x45, 0x41, 0x4e, 0x43, 0x45,
	0x10, 0x03, 0x12, 0x19, 0x0a, 0x15, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x53, 0x54, 0x41,
	0x52, 0x54, 0x5f, 0x49, 0x4e, 0x53, 0x45, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x04, 0x12, 0x1b, 0x0a,
	0x17, 0x44, 0x45, 0x56, 0x49, 0x43, 0x45, 0x5f, 0x52, 0x45, 0x4c, 0x45, 0x41, 0x53, 0x45, 0x5f,
	0x49, 0x4e, 0x53, 0x45, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x05, 0x12, 0x1a, 0x0a, 0x16, 0x41, 0x43,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x47, 0x52, 0x41, 0x4e, 0x54, 0x5f, 0x49, 0x4e, 0x54, 0x45,
	0x47, 0x52, 0x41, 0x4c, 0x10, 0x14, 0x2a, 0x3b, 0x0a, 0x11, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x50,
	0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x12, 0x07, 0x0a, 0x03, 0x4e,
	0x45, 0x57, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x50, 0x41, 0x59, 0x10, 0x01, 0x12, 0x0a, 0x0a,
	0x06, 0x43, 0x41, 0x4e, 0x43, 0x45, 0x4c, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x46, 0x41, 0x49,
	0x4c, 0x10, 0x03, 0x2a, 0x5a, 0x0a, 0x13, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x75, 0x6d, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x6e,
	0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4f, 0x66, 0x66, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x46,
	0x61, 0x69, 0x6c, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x6e, 0x76, 0x61, 0x6c, 0x69, 0x64,
	0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x10,
	0x04, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x65, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x10, 0x05, 0x2a,
	0x51, 0x0a, 0x10, 0x42, 0x69, 0x6c, 0x6c, 0x69, 0x6e, 0x67, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e,
	0x75, 0x6d, 0x73, 0x12, 0x0a, 0x0a, 0x06, 0x41, 0x4d, 0x4f, 0x55, 0x4e, 0x54, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x44, 0x41, 0x59, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4d, 0x4f, 0x4e, 0x54,
	0x48, 0x10, 0x02, 0x12, 0x08, 0x0a, 0x04, 0x57, 0x45, 0x45, 0x4b, 0x10, 0x03, 0x12, 0x08, 0x0a,
	0x04, 0x59, 0x45, 0x41, 0x52, 0x10, 0x04, 0x12, 0x09, 0x0a, 0x05, 0x52, 0x45, 0x4e, 0x45, 0x57,
	0x10, 0x05, 0x2a, 0x3d, 0x0a, 0x0b, 0x49, 0x6e, 0x76, 0x6f, 0x69, 0x63, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x15, 0x0a, 0x11, 0x56, 0x41, 0x54, 0x5f, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x5f, 0x49,
	0x4e, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x56, 0x41, 0x54, 0x5f,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x41, 0x4c, 0x5f, 0x49, 0x4e, 0x56, 0x4f, 0x49, 0x43, 0x45, 0x10,
	0x01, 0x2a, 0x3a, 0x0a, 0x13, 0x56, 0x6f, 0x75, 0x63, 0x68, 0x65, 0x72, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x55, 0x42, 0x4c,
	0x49, 0x53, 0x48, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x44, 0x52, 0x41, 0x46, 0x54, 0x10, 0x01,
	0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x10, 0x02, 0x42, 0x08, 0x5a,
	0x06, 0x65, 0x6e, 0x75, 0x6d, 0x73, 0x2f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_enums_proto_rawDescOnce sync.Once
	file_enums_proto_rawDescData = file_enums_proto_rawDesc
)

func file_enums_proto_rawDescGZIP() []byte {
	file_enums_proto_rawDescOnce.Do(func() {
		file_enums_proto_rawDescData = protoimpl.X.CompressGZIP(file_enums_proto_rawDescData)
	})
	return file_enums_proto_rawDescData
}

var file_enums_proto_enumTypes = make([]protoimpl.EnumInfo, 22)
var file_enums_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_enums_proto_goTypes = []interface{}{
	(CacheAdapterEnums)(0),                      // 0: CacheAdapterEnums
	(EventMessageType)(0),                       // 1: EventMessageType
	(OrderPyStateEnums)(0),                      // 2: OrderPyStateEnums
	(InstanceStatusEnums)(0),                    // 3: InstanceStatusEnums
	(BillingTypeEnums)(0),                       // 4: BillingTypeEnums
	(InvoiceType)(0),                            // 5: InvoiceType
	(VoucherPublishState)(0),                    // 6: VoucherPublishState
	(SettlementApplication_SettlementStatus)(0), // 7: SettlementApplication.SettlementStatus
	(TransferStatus_TransferStatus)(0),          // 8: TransferStatus.TransferStatus
	(ApprovalStatus_ApprovalStatus)(0),          // 9: ApprovalStatus.ApprovalStatus
	(RechargeType_RechargeTypeEnum)(0),          // 10: RechargeType.RechargeTypeEnum
	(MessageType_MessageType)(0),                // 11: MessageType.MessageType
	(TransactionChannel_TransactionChannel)(0),  // 12: TransactionChannel.TransactionChannel
	(TransactionType_TransactionType)(0),        // 13: TransactionType.TransactionType
	(IncomeExpenseType_IncomeExpenseType)(0),    // 14: IncomeExpenseType.IncomeExpenseType
	(OrderState_OrderState)(0),                  // 15: OrderState.OrderState
	(PayState_PayState)(0),                      // 16: PayState.PayState
	(OrderType_OrderTypeEnums)(0),               // 17: OrderType.OrderTypeEnums
	(VoucherState_UseStateEnums)(0),             // 18: VoucherState.UseStateEnums
	(VoucherState_CategoryEnums)(0),             // 19: VoucherState.CategoryEnums
	(SmsType_SmsTypeEnums)(0),                   // 20: SmsType.SmsTypeEnums
	(PayStrategy_PayType)(0),                    // 21: PayStrategy.PayType
	(*SettlementApplication)(nil),               // 22: SettlementApplication
	(*TransferStatus)(nil),                      // 23: TransferStatus
	(*ApprovalStatus)(nil),                      // 24: ApprovalStatus
	(*RechargeType)(nil),                        // 25: RechargeType
	(*MessageType)(nil),                         // 26: MessageType
	(*TransactionChannel)(nil),                  // 27: TransactionChannel
	(*TransactionType)(nil),                     // 28: TransactionType
	(*IncomeExpenseType)(nil),                   // 29: IncomeExpenseType
	(*OrderState)(nil),                          // 30: OrderState
	(*PayState)(nil),                            // 31: PayState
	(*OrderType)(nil),                           // 32: OrderType
	(*VoucherState)(nil),                        // 33: VoucherState
	(*SmsType)(nil),                             // 34: SmsType
	(*PayStrategy)(nil),                         // 35: PayStrategy
}
var file_enums_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_enums_proto_init() }
func file_enums_proto_init() {
	if File_enums_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_enums_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SettlementApplication); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApprovalStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RechargeType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MessageType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IncomeExpenseType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OrderType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoucherState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SmsType); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_enums_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PayStrategy); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_enums_proto_rawDesc,
			NumEnums:      22,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_enums_proto_goTypes,
		DependencyIndexes: file_enums_proto_depIdxs,
		EnumInfos:         file_enums_proto_enumTypes,
		MessageInfos:      file_enums_proto_msgTypes,
	}.Build()
	File_enums_proto = out.File
	file_enums_proto_rawDesc = nil
	file_enums_proto_goTypes = nil
	file_enums_proto_depIdxs = nil
}
