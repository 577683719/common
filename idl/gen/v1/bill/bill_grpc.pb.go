// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.3.0
// - protoc             (unknown)
// source: bill.proto

package bill

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

const (
	BillServices_TransactionDetailList_FullMethodName      = "/BillServices/TransactionDetailList"
	BillServices_BillDetailsList_FullMethodName            = "/BillServices/BillDetailsList"
	BillServices_BillDetails_FullMethodName                = "/BillServices/BillDetails"
	BillServices_ExportDailyStatement_FullMethodName       = "/BillServices/ExportDailyStatement"
	BillServices_GetRecentPointsStatistics_FullMethodName  = "/BillServices/GetRecentPointsStatistics"
	BillServices_QueryTransactionDetailList_FullMethodName = "/BillServices/QueryTransactionDetailList"
	BillServices_QueryBillDetailsList_FullMethodName       = "/BillServices/QueryBillDetailsList"
	BillServices_GetBillProductList_FullMethodName         = "/BillServices/GetBillProductList"
)

// BillServicesClient is the client API for BillServices service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type BillServicesClient interface {
	//收支明细列表
	TransactionDetailList(ctx context.Context, in *TransactionDetailListRequest, opts ...grpc.CallOption) (*TransactionDetailListResponse, error)
	//账单明细列表接口
	BillDetailsList(ctx context.Context, in *BillDetailsListRequest, opts ...grpc.CallOption) (*BillDetailsListResponse, error)
	//账单详细接口
	BillDetails(ctx context.Context, in *BillDetailsReq, opts ...grpc.CallOption) (*BillDetailsResp, error)
	//导出日结账单接口
	ExportDailyStatement(ctx context.Context, in *ExportDailyStatementRequest, opts ...grpc.CallOption) (*ExportDailyStatementResponse, error)
	//获取近期雨点统计
	GetRecentPointsStatistics(ctx context.Context, in *GetRecentPointsStatisticsRequest, opts ...grpc.CallOption) (*GetRecentPointsStatisticsResponse, error)
	//管理端_查询收支明细列表
	QueryTransactionDetailList(ctx context.Context, in *QueryTransactionDetailListRequest, opts ...grpc.CallOption) (*QueryTransactionDetailListResponse, error)
	//管理端_查询账单明细列表
	QueryBillDetailsList(ctx context.Context, in *QueryBillDetailsListRequest, opts ...grpc.CallOption) (*QueryBillDetailsListResponse, error)
	//管理端_获取产品列表
	GetBillProductList(ctx context.Context, in *GetBillProductListRequest, opts ...grpc.CallOption) (*GetBillProductListResponse, error)
}

type billServicesClient struct {
	cc grpc.ClientConnInterface
}

func NewBillServicesClient(cc grpc.ClientConnInterface) BillServicesClient {
	return &billServicesClient{cc}
}

func (c *billServicesClient) TransactionDetailList(ctx context.Context, in *TransactionDetailListRequest, opts ...grpc.CallOption) (*TransactionDetailListResponse, error) {
	out := new(TransactionDetailListResponse)
	err := c.cc.Invoke(ctx, BillServices_TransactionDetailList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billServicesClient) BillDetailsList(ctx context.Context, in *BillDetailsListRequest, opts ...grpc.CallOption) (*BillDetailsListResponse, error) {
	out := new(BillDetailsListResponse)
	err := c.cc.Invoke(ctx, BillServices_BillDetailsList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billServicesClient) BillDetails(ctx context.Context, in *BillDetailsReq, opts ...grpc.CallOption) (*BillDetailsResp, error) {
	out := new(BillDetailsResp)
	err := c.cc.Invoke(ctx, BillServices_BillDetails_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billServicesClient) ExportDailyStatement(ctx context.Context, in *ExportDailyStatementRequest, opts ...grpc.CallOption) (*ExportDailyStatementResponse, error) {
	out := new(ExportDailyStatementResponse)
	err := c.cc.Invoke(ctx, BillServices_ExportDailyStatement_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billServicesClient) GetRecentPointsStatistics(ctx context.Context, in *GetRecentPointsStatisticsRequest, opts ...grpc.CallOption) (*GetRecentPointsStatisticsResponse, error) {
	out := new(GetRecentPointsStatisticsResponse)
	err := c.cc.Invoke(ctx, BillServices_GetRecentPointsStatistics_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billServicesClient) QueryTransactionDetailList(ctx context.Context, in *QueryTransactionDetailListRequest, opts ...grpc.CallOption) (*QueryTransactionDetailListResponse, error) {
	out := new(QueryTransactionDetailListResponse)
	err := c.cc.Invoke(ctx, BillServices_QueryTransactionDetailList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billServicesClient) QueryBillDetailsList(ctx context.Context, in *QueryBillDetailsListRequest, opts ...grpc.CallOption) (*QueryBillDetailsListResponse, error) {
	out := new(QueryBillDetailsListResponse)
	err := c.cc.Invoke(ctx, BillServices_QueryBillDetailsList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *billServicesClient) GetBillProductList(ctx context.Context, in *GetBillProductListRequest, opts ...grpc.CallOption) (*GetBillProductListResponse, error) {
	out := new(GetBillProductListResponse)
	err := c.cc.Invoke(ctx, BillServices_GetBillProductList_FullMethodName, in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BillServicesServer is the server API for BillServices service.
// All implementations should embed UnimplementedBillServicesServer
// for forward compatibility
type BillServicesServer interface {
	//收支明细列表
	TransactionDetailList(context.Context, *TransactionDetailListRequest) (*TransactionDetailListResponse, error)
	//账单明细列表接口
	BillDetailsList(context.Context, *BillDetailsListRequest) (*BillDetailsListResponse, error)
	//账单详细接口
	BillDetails(context.Context, *BillDetailsReq) (*BillDetailsResp, error)
	//导出日结账单接口
	ExportDailyStatement(context.Context, *ExportDailyStatementRequest) (*ExportDailyStatementResponse, error)
	//获取近期雨点统计
	GetRecentPointsStatistics(context.Context, *GetRecentPointsStatisticsRequest) (*GetRecentPointsStatisticsResponse, error)
	//管理端_查询收支明细列表
	QueryTransactionDetailList(context.Context, *QueryTransactionDetailListRequest) (*QueryTransactionDetailListResponse, error)
	//管理端_查询账单明细列表
	QueryBillDetailsList(context.Context, *QueryBillDetailsListRequest) (*QueryBillDetailsListResponse, error)
	//管理端_获取产品列表
	GetBillProductList(context.Context, *GetBillProductListRequest) (*GetBillProductListResponse, error)
}

// UnimplementedBillServicesServer should be embedded to have forward compatible implementations.
type UnimplementedBillServicesServer struct {
}

func (UnimplementedBillServicesServer) TransactionDetailList(context.Context, *TransactionDetailListRequest) (*TransactionDetailListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TransactionDetailList not implemented")
}
func (UnimplementedBillServicesServer) BillDetailsList(context.Context, *BillDetailsListRequest) (*BillDetailsListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BillDetailsList not implemented")
}
func (UnimplementedBillServicesServer) BillDetails(context.Context, *BillDetailsReq) (*BillDetailsResp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BillDetails not implemented")
}
func (UnimplementedBillServicesServer) ExportDailyStatement(context.Context, *ExportDailyStatementRequest) (*ExportDailyStatementResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ExportDailyStatement not implemented")
}
func (UnimplementedBillServicesServer) GetRecentPointsStatistics(context.Context, *GetRecentPointsStatisticsRequest) (*GetRecentPointsStatisticsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRecentPointsStatistics not implemented")
}
func (UnimplementedBillServicesServer) QueryTransactionDetailList(context.Context, *QueryTransactionDetailListRequest) (*QueryTransactionDetailListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryTransactionDetailList not implemented")
}
func (UnimplementedBillServicesServer) QueryBillDetailsList(context.Context, *QueryBillDetailsListRequest) (*QueryBillDetailsListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method QueryBillDetailsList not implemented")
}
func (UnimplementedBillServicesServer) GetBillProductList(context.Context, *GetBillProductListRequest) (*GetBillProductListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetBillProductList not implemented")
}

// UnsafeBillServicesServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to BillServicesServer will
// result in compilation errors.
type UnsafeBillServicesServer interface {
	mustEmbedUnimplementedBillServicesServer()
}

func RegisterBillServicesServer(s grpc.ServiceRegistrar, srv BillServicesServer) {
	s.RegisterService(&BillServices_ServiceDesc, srv)
}

func _BillServices_TransactionDetailList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TransactionDetailListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillServicesServer).TransactionDetailList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillServices_TransactionDetailList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillServicesServer).TransactionDetailList(ctx, req.(*TransactionDetailListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillServices_BillDetailsList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BillDetailsListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillServicesServer).BillDetailsList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillServices_BillDetailsList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillServicesServer).BillDetailsList(ctx, req.(*BillDetailsListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillServices_BillDetails_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BillDetailsReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillServicesServer).BillDetails(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillServices_BillDetails_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillServicesServer).BillDetails(ctx, req.(*BillDetailsReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillServices_ExportDailyStatement_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ExportDailyStatementRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillServicesServer).ExportDailyStatement(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillServices_ExportDailyStatement_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillServicesServer).ExportDailyStatement(ctx, req.(*ExportDailyStatementRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillServices_GetRecentPointsStatistics_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetRecentPointsStatisticsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillServicesServer).GetRecentPointsStatistics(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillServices_GetRecentPointsStatistics_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillServicesServer).GetRecentPointsStatistics(ctx, req.(*GetRecentPointsStatisticsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillServices_QueryTransactionDetailList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryTransactionDetailListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillServicesServer).QueryTransactionDetailList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillServices_QueryTransactionDetailList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillServicesServer).QueryTransactionDetailList(ctx, req.(*QueryTransactionDetailListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillServices_QueryBillDetailsList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(QueryBillDetailsListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillServicesServer).QueryBillDetailsList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillServices_QueryBillDetailsList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillServicesServer).QueryBillDetailsList(ctx, req.(*QueryBillDetailsListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BillServices_GetBillProductList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetBillProductListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BillServicesServer).GetBillProductList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: BillServices_GetBillProductList_FullMethodName,
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BillServicesServer).GetBillProductList(ctx, req.(*GetBillProductListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// BillServices_ServiceDesc is the grpc.ServiceDesc for BillServices service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var BillServices_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "BillServices",
	HandlerType: (*BillServicesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "TransactionDetailList",
			Handler:    _BillServices_TransactionDetailList_Handler,
		},
		{
			MethodName: "BillDetailsList",
			Handler:    _BillServices_BillDetailsList_Handler,
		},
		{
			MethodName: "BillDetails",
			Handler:    _BillServices_BillDetails_Handler,
		},
		{
			MethodName: "ExportDailyStatement",
			Handler:    _BillServices_ExportDailyStatement_Handler,
		},
		{
			MethodName: "GetRecentPointsStatistics",
			Handler:    _BillServices_GetRecentPointsStatistics_Handler,
		},
		{
			MethodName: "QueryTransactionDetailList",
			Handler:    _BillServices_QueryTransactionDetailList_Handler,
		},
		{
			MethodName: "QueryBillDetailsList",
			Handler:    _BillServices_QueryBillDetailsList_Handler,
		},
		{
			MethodName: "GetBillProductList",
			Handler:    _BillServices_GetBillProductList_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "bill.proto",
}
